"","File","Query","SolutionStr","MySolutionStr"
"1","1000.txt","log.error(ServiceMBeanLogger.ROOT_LOGGER.postRegisterInitializationFailed(), e);","log.error(e);","log.warn(ServiceMBeanLogger.ROOT_LOGGER.initializationFailed(e, jbossInternalDescription()));"
"2","10004.txt","public void setStart(boolean start) {","void setStart(boolean start) {","public boolean isStart() {"
"3","1001.txt","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS)) {","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS) && topology_conf.get(Config.TOPOLOGY_GROUPS) != null) {","if (topology_conf.containsKey(Config.TOPOLOGY_USERS)) {"
"4","10041.txt","return cr.getPropertyDescriptors();","return cr.getBeanInfo().getPropertyDescriptors();","return cr.getPropertyDescriptor(propertyName);"
"5","10060.txt","public synchronized void close() throws IOException {","public void close() throws IOException {","public void close() throws IOException {"
"6","10071.txt","dest.nDev = source.nDev;","dest.nDev = dest.nDev;","dest.dev = source.dev;"
"7","10171.txt","return this.container.getCacheManagerConfiguration().globalJmxStatistics().cacheManagerName() + ""."" + this.cacheName;","return container.getCacheManagerConfiguration().globalJmxStatistics().cacheManagerName() + ""."" + this.cacheName;","return this.container.getCacheManagerConfiguration().globalJmxStatistics().cacheManagerName().hashCode() ^ this.cacheName.hashCode();"
"8","10179.txt","deploymentUnit.removeAttachment(EjbDeploymentAttachmentKeys.APPLICATION_EXCEPTION_DETAILS);","deploymentUnit.removeAttachment(EjbDeploymentAttachmentKeys.EJB_JAR_CONFIGURATION);","deploymentUnit.removeAttachment(EjbDeploymentAttachmentKeys.EJB_INJECTIONS);"
"9","10213.txt","PatchLogger.ROOT_LOGGER.cannotDeleteFile(workDir.getAbsolutePath());","PatchLogger.ROOT_LOGGER.debugf(""failed to remove work directory (%s)"", workDir);","PatchLogger.ROOT_LOGGER.debugf(e, ""failed to close input stream"");"
"10","10215.txt","throw new RuntimeException(""Could not clear up ""+getTestDirectory());","// Ignore, because by this time, it is too late.","in = new InputStreamReader(new FileInputStream(file));"
"11","10218.txt","return optima.clone();","return (RealPointValuePair[]) optima.clone();","return optima[0];"
"12","10219.txt","return optima.clone();","return (VectorialPointValuePair[]) optima.clone();","return optima[0];"
"13","10220.txt","return optima.clone();","return (RealPointValuePair[]) optima.clone();","return optima[0];"
"14","10227.txt","return map.get(key);","return (NumberTransformer) map.get(key);","return map.keySet();"
"15","10236.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"16","10277.txt","return getFile().length();","return super.contentLength();","return getFile().exists();"
"17","1031.txt","return ListOrderedMap.listOrderedMap(new HashMap<K, V>());","return (ListOrderedMap<K, V>) ListOrderedMap.listOrderedMap(new HashMap<K, V>());","return (ListOrderedMap<K, V>) super.getMap();"
"18","1033.txt","return PredicatedSortedSet.predicatedSortedSet(new TreeSet<E>(), testPredicate);","return (PredicatedSortedSet<E>) PredicatedSortedSet.predicatedSortedSet(new TreeSet<E>(), testPredicate);","return PredicatedSortedSet.predicatedSortedSet(new TreeSet<E>(), truePredicate);"
"19","1040.txt","DeploymentUnitProcessingException failedToParseXml(@Cause Throwable cause, VirtualFile appXml, int lineNumber, int columnNumber);","DeploymentUnitProcessingException failedToParseXml(VirtualFile appXml, int lineNumber, int columnNumber);","DeploymentUnitProcessingException failedToParseXml(@Cause Throwable cause, VirtualFile appXml);"
"20","1041.txt","proxyDefinition.setRole(targetDefinition.getRole());","proxyDefinition.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);","proxyDefinition.setSource(definition.getSource());"
"21","10474.txt","if (stateValues.isSilent() == false && theConsole.getConsole() == null) {","if (theConsole.getConsole() == null) {","if (stateValues.isSilentOrNonInteractive()) {"
"22","10475.txt","if ((stateValues != null && stateValues.isSilent() == false) && theConsole.getConsole() == null) {","if (theConsole.getConsole() == null) {","if ((stateValues == null) || (stateValues != null) && (stateValues.isSilent() == false)) {"
"23","10476.txt","if ((stateValues != null && stateValues.isSilent() == false) && theConsole.getConsole() == null) {","if (theConsole.getConsole() == null) {","if (!stateValues.isManagement()) {"
"24","10508.txt","for (Map.Entry<?, ?> entry : original.entrySet()) {","for (Map.Entry entry : original.entrySet()) {","for (Map.Entry<?, ?> entry : other.entrySet()) {"
"25","10658.txt","node.get(OP).set(ADD);","node.get(OP).set(RootLoggerResourceDefinition.ROOT_LOGGER_ADD_OPERATION_NAME);","op.get(OP).set(ADD);"
"26","10659.txt","if (isRunning()) {","if (!isRunning()) {","if (!isRunning()) {"
"27","10660.txt","ConnectorLogger ROOT_LOGGER = Logger.getMessageLogger(ConnectorLogger.class, ""org.jboss.as.connector"");","ConnectorLogger ROOT_LOGGER = Logger.getMessageLogger(ConnectorLogger.class, ConnectorLogger.class.getPackage().getName());","ConnectorLogger MDR_LOGGER = Logger.getMessageLogger(ConnectorLogger.class, ""org.jboss.as.connector.services.mdr"");"
"28","10689.txt","return; // not an EE deployment","return; // not an ee deployment","return;"
"29","10690.txt","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnvironment == null","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnviroment == null","if (serverEnvironment != null) {"
"30","1071.txt","if(tuple.isTick()) {","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(ct.equals(CoordType.single())) {"
"31","10717.txt","return; //not an EE deployment","return; //not an ee deployment","return;"
"32","1073.txt","assertEquals(builder, writer.getBuilder());","assertTrue(builder == writer.getBuilder());","assertEquals(""Bar"", writer.toString());"
"33","10740.txt","if (rbd.isPrototype()) {","if (SCOPE_PROTOTYPE.equals(rbd.getScope())) {","if (mbd.isSingleton()) {"
"34","10741.txt","if (!StringUtils.hasLength(mbd.getScope())) {","if (mbd.getScope() == null) {","if (!this.alreadyCreated.contains(beanName)) {"
"35","10753.txt","return new SingletonComponentInstance(this);","return super.createInstance();","return this.singletonComponentInstance;"
"36","10770.txt","Method m2 = getNameMethod;","// Method m2 = getNameMethod;","Method m = getNameMethod;"
"37","10772.txt","cmdCtx = initCommandContext(defaultControllerHost, defaultControllerPort, username, password, false, true);","cmdCtx = initCommandContext(defaultControllerHost, defaultControllerPort, username, password, false, connect);","cmdCtx = initCommandContext(defaultControllerHost, defaultControllerPort, username, password, false, connect);"
"38","10808.txt","if (Precision.compareTo(entry, 0d, epsilon) > 0) {","if (Precision.compareTo(entry, 0d, maxUlps) > 0) {","if (Precision.compareTo(entry, 0d, epsilon) < 0) {"
"39","1083.txt","return delegate.requireChild(element);","return delegate.getChild(element);","return delegate.getChild(element);"
"40","10838.txt","builder.append(""org.jboss.as.arquillian.api,org.jboss.as.arquillian.container,org.jboss.as.osgi,"");","builder.append(""org.jboss.as.osgi,"");","builder.append(""org.jboss.arquillian.container.test.api,org.jboss.arquillian.junit,"");"
"41","10864.txt","BindingResults results = binder.bind(values);","binder.bind(values);","BindingResults results = binder.bind(Collections.singletonMap(""date"", ""bogus""));"
"42","1089.txt","assertTrue(jar instanceof ZipArchiveInputStream);","assertTrue(jar instanceof JarArchiveInputStream);","assertTrue(ar instanceof ArArchiveInputStream);"
"43","10902.txt","return this.relatedContext.getTypeConverter().convertValue(value.getValue(), targetTypeDescriptor);","return this.relatedContext.getTypeConverter().convertValue(value.getValue(), TypeDescriptor.forObject(value.getValue()), targetTypeDescriptor);","return this.relatedContext.getTypeConverter().convertValue(value, TypeDescriptor.forObject(value), targetTypeDescriptor);"
"44","10910.txt","if(path != null) update.get(PATH).set(path);","update.get(PATH).set(path);","if(type != null) addUpdate.get(JVM_TYPE).set(type);"
"45","10921.txt",".setDefaultValue(new ModelNode().set(0))",".setDefaultValue(new ModelNode().set(5000))",".setDefaultValue(new ModelNode().set(60))"
"46","10932.txt","} catch (Throwable e) {","} catch (IOException e) {","} catch (Exception e) {"
"47","10961.txt","throw MESSAGES.jaxRpcNotSupported();","throw new DeploymentUnitProcessingException(""JAXRPC not supported""); //TODO!!","throw MESSAGES.cannotGetURLForDescriptor(e, wsdd.getPathName());"
"48","10967.txt","super();","; // empty constructor","Class type = array.getClass().getComponentType();"
"49","10968.txt","super();","; // empty constructor","public static boolean xor(boolean[] array) {"
"50","10969.txt","super();","; // empty constructor","return 0;"
"51","10970.txt","super();","; // empty constructor","return null;"
"52","10971.txt","super();","; // empty constructor","Class superclass = cls.getSuperclass();"
"53","10972.txt","super();","; // empty constructor","super(growBy);"
"54","10973.txt","super();","; // empty constructor","hasExp = true;"
"55","10975.txt","super();","; // empty constructor","start = 0;"
"56","10976.txt","super();","; // empty constructor","out.write(ch);"
"57","10977.txt","super();","; // empty constructor","public static void isTrue(boolean expression) {"
"58","10978.txt","super();","; // empty constructor","spaceToWrapAt = str.indexOf(' ', wrapLength + offset);"
"59","10979.txt","super();","; // empty constructor","super();"
"60","10990.txt","case STOPPING_to_DOWN: {","case START_REQUESTED_to_DOWN: {","case REMOVING_to_REMOVED: {"
"61","11038.txt","return System.getProperty(""jboss.server.deploy.dir"") + ""/"" + fileName;","return fileName;  // TODO: Need some way to get fully qualified path for this (should be a system prop)","return ServerGroupDeploymentElement.class;"
"62","11045.txt","ToStringBuilder.setDefaultStyle(ToStringStyle.DEFAULT_STYLE);","ToStringBuilder.setDefaultStyle(STYLE);","ToStringBuilder.setDefaultStyle(STYLE);"
"63","11064.txt","params.put(""security-application"", ""true"");","params.put(""application"", ""true"");","params.put(""pool-use-strict-min"", ""true"");"
"64","11073.txt","Object id = msg.get(""id"");","String id = (String) msg.get(""id"");","Object anchorObj = msg.get(""anchors"");"
"65","1109.txt","List<String> resources = new ArrayList<String>();","List<Resource> resources = new ArrayList<Resource>();","List<String> list = new ArrayList<String>();"
"66","11090.txt","if(tuple.isTick()) {","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(ct.equals(CoordType.single())) {"
"67","11095.txt","return false;","return super.canRead(ae);","return true;"
"68","11096.txt","return false;","return super.canWrite(ae);","return name;"
"69","11098.txt","localInterfaceType = index.classIndex(localInterface).getModuleClass();","localInterfaceType = classLoader.loadClass(localInterface);","localInterfaceType = index.classIndex(localHome).getModuleClass();"
"70","11109.txt","static final String CRLF = ""\r\n"";","public static final String CRLF = ""\r\n"";","static final String EMPTY = """";"
"71","11113.txt","for (AttributeDefinition attribute : BridgeDefinition.ATTRIBUTES) {","for (AttributeDefinition attribute : CommonAttributes.BRIDGE_ATTRIBUTES) {","for (AttributeDefinition attribute : DivertDefinition.ATTRIBUTES) {"
"72","11116.txt","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.completeStep();","context.completeStep();"
"73","11144.txt","if (endpointMetaData.isWebservice()) {","if (endpointMetaData.isWebservice() && endpointMetaData.getWebServiceAnnotation().isValidDeclaration()) {","if (endpointMetaData.isBridgeEnabled()) {"
"74","11145.txt","assertEquals(""x.tar.bz2"", BZip2Utils.getCompressedFilename(""x.TAR""));","assertEquals(""x.TAR.bz2"", BZip2Utils.getCompressedFilename(""x.TAR""));","assertEquals(""x.tar.bz2"", BZip2Utils.getCompressedFilename(""x.tar""));"
"75","11155.txt","public SimpleOperationDefinitionBuilder setParameters(AttributeDefinition... parameters) {","public SimpleOperationDefinitionBuilder setParameters(AttributeDefinition... parameters) {//todo add validation for same param name","public SimpleOperationDefinitionBuilder setReplyParameters(AttributeDefinition... replyParameters) {"
"76","1118.txt","//@Override Intellij keeps JDK in front","@Override","@Override"
"77","112.txt","Assert.assertTrue(""key=""+ key + ""\n with child1 \n"" + child1.toString() + ""\n has child2 not defined\n node2 is:\n"" + node2.toString(), child2.isDefined());","Assert.assertTrue(child1.toString(), child2.isDefined());","Assert.assertTrue(""Missing: "" + key + ""\n"" + node1 + ""\n"" + node2, node2.has(key));"
"78","11200.txt","if (chain.isAsyncStarted()) {","if (!chain.pop()) {","if (!chain.pop()) {"
"79","11205.txt","if(taskId==-1) {","if(taskId==Constants.SYSTEM_TASK_ID) {","if(ret==null) {"
"80","11226.txt","public String getFilename() {","public String getFilename() throws IllegalStateException {","public String toString() {"
"81","11242.txt","LOG.error(""server errors in handling the request"", e.getCause());","e.getCause().printStackTrace();","LOG.info(""failed to enqueue a request message"", e);"
"82","11263.txt","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"83","11268.txt","Thread.sleep(testDelayMillis * 4);","Thread.sleep(testDelayMillis);","Thread.sleep(testDelayMillis);"
"84","1127.txt","ServerStartBatchBuilder.this.serverStartupListener.unexpectOnDemand(serviceName);","ServerStartBatchBuilder.this.serverStartupListener.expectOnDemand(serviceName);","ServerStartBatchBuilder.this.serverStartupListener.expectOnDemand(serviceName);"
"85","11296.txt","if (iorSecurityConfigMetaData != null && iorSecurityConfigMetaData.getTransportConfig() != null) {","if (iorSecurityConfigMetaData != null) {","if (iorSecurityConfigMetaData != null) {"
"86","11306.txt","this(new ArrayBlockingQueue<TransactionalProtocolClient.PreparedOperation<T>>(capacity));","this.queue = new ArrayBlockingQueue<TransactionalProtocolClient.PreparedOperation<T>>(capacity);","this(new LinkedBlockingQueue<TransactionalProtocolClient.PreparedOperation<T>>());"
"87","11315.txt","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(tuple.isTick()) {","if(ct.equals(CoordType.single())) {"
"88","1146.txt","catch (Throwable ex) {","catch (IOException ex) {","catch (Exception ex) {"
"89","1147.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"90","11486.txt","public List<Object> getHeaders(String name) {","public List getHeaders(String name) {","public Object getHeader(String name) {"
"91","11519.txt","public static final String GLOBAL_MODULES = ""-global-modules"";","public static final String CLASSPATH = ""-classpath"";","public static final String HOST = ""--host"";"
"92","11565.txt","String formatterNotFound(String name);","IllegalArgumentException formatterNotFound(String name);","String loggerNotFound(String name);"
"93","11574.txt","doHandle(ctx);","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","ctx.leaveState();"
"94","11602.txt","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, i);"
"95","11603.txt","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, i);"
"96","11604.txt","private final List<K> insertOrder = new ArrayList<K>();","protected final List<K> insertOrder = new ArrayList<K>();","private final List<K> insertOrder;"
"97","11615.txt",".setValidator(new IntRangeValidator(0, true, true))",".setValidator(new IntRangeValidator(1, true, true))",".setValidator(new IntRangeValidator(1, true, true))"
"98","11634.txt","return; // not an EE deployment","return; // not an ee deployment","return;"
"99","11635.txt","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnvironment == null","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnviroment == null","if (serverEnvironment != null) {"
"100","1164.txt","final double rem = FastMath.IEEEremainder(lhs[lhsOffset], rhs[rhsOffset]);","final double rem = lhs[lhsOffset] % rhs[rhsOffset];","final double k   = FastMath.rint((lhs[lhsOffset] - rem) / rhs[rhsOffset]);"
"101","11662.txt","return; //not an EE deployment","return; //not an ee deployment","return;"
"102","117.txt","for(AnnotationInstance annotation : excludeClassAnnotations) {","for(AnnotationInstance annotation : excludeDefaultAnnotations) {","for(AnnotationInstance annotation : excludeDefaultAnnotations) {"
"103","11700.txt","public int getN() {","public double getN() {","public int getWindowSize() {"
"104","11710.txt","if (StringUtils.isEmpty(str)) {","if (str == null || str.length() == 0) {","if (list.isEmpty()) {"
"105","11712.txt","writer.writeEndElement();","//","ParseUtils.requireNoContent(reader);"
"106","11723.txt","return wrapped.nextInt(n);","return wrapped.nextInt();","return wrapped.nextInt();"
"107","11749.txt","if(info != null) {","if(info != null && info.isRunning()) {","if(existing != null) { // FIXME"
"108","11826.txt",".setAllowExpression(false)",".setAllowExpression(true)",".setAllowExpression(true)"
"109","11842.txt","throw new ArithmeticException(""overflow: subtract"");","throw new ArithmeticException(""overflow: add"");","throw new ArithmeticException(""overflow: add"");"
"110","1185.txt","public static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","public static final ServiceName JBOSS_SERVER_CONTROLLER = JBOSS_AS.append(""server-controller"");"
"111","11853.txt","result.get(""content"").get(0).get(""input-stream-index"").set(index);","result.get(""input-stream-index"").set(index);","add.get(""content"").get(0).get(""input-stream-index"").set(index);"
"112","11862.txt","context.removeService(ChannelService.getFactoryServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getStackServiceName(ChannelService.DEFAULT));","context.removeService(ChannelFactoryService.getServiceName(ChannelFactoryService.DEFAULT));"
"113","11865.txt","doHandle(ctx);","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","ctx.leaveState();"
"114","11877.txt","command.add(""java"");","command.add(TestSuiteEnvironment.getJavaPath());","command.add(""-jar"");"
"115","11919.txt","drivers.remove(driver.getDriverName());","drivers.put(driver.getDriverName(), driver);","drivers.put(driver.getDriverName(), driver);"
"116","11923.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"117","11944.txt","exceptionResolver.resolveException(request, response, null, ex);","ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex);","exceptionResolver = new ResponseStatusExceptionResolver();"
"118","11954.txt","CommonAttributes.FILTER, HA, CommonAttributes.MIN_LARGE_MESSAGE_SIZE,","CommonAttributes.FILTER, CommonAttributes.TRANSFORMER_CLASS_NAME, HA, CommonAttributes.MIN_LARGE_MESSAGE_SIZE,","CommonAttributes.FILTER, CommonAttributes.TRANSFORMER_CLASS_NAME,"
"119","11955.txt","EXCLUSIVE };","CommonAttributes.TRANSFORMER_CLASS_NAME, EXCLUSIVE };","CommonAttributes.TRANSFORMER_CLASS_NAME, EXCLUSIVE };"
"120","11957.txt",".setAllowExpression(false)",".setAllowExpression(true)",".setAllowExpression(true)"
"121","11968.txt","ROOT_LOGGER.virtualNodesAttributeDeprecated();","DistributedCacheResource.VIRTUAL_NODES.parseAndSetParameter(value, cache, reader);","ROOT_LOGGER.eagerAttributeDeprecated();"
"122","11969.txt","this.writeOptional(writer, Attribute.SEGMENTS, distributedCache, ModelKeys.SEGMENTS);","this.writeOptional(writer, Attribute.VIRTUAL_NODES, distributedCache, ModelKeys.VIRTUAL_NODES);","this.writeOptional(writer, Attribute.OWNERS, distributedCache, ModelKeys.OWNERS);"
"123","11991.txt",""" org.jboss.as.appclient"" +",""" -logmodule org.jboss.logmanager org.jboss.as.appclient"" +",""" -Djboss.home.dir=""+ asInst +"
"124","11992.txt","+ "" org.jboss.as.cli""","+ "" -logmodule org.jboss.logmanager org.jboss.as.cli""","+ "" -Djboss.modules.dir="" + asDist + ""/modules"""
"125","12029.txt","public static final AttachmentKey<Map<String, MountedDeploymentOverlay>> DEPLOYMENT_OVERLAY_LOCATIONS = AttachmentKey.create(Map.class);","public static final AttachmentKey<AttachmentList<VirtualFile>> DEPLOYMENT_OVERRIDE_LOCATIONS = AttachmentKey.createList(VirtualFile.class);","public static final AttachmentKey<Map<ModuleIdentifier, CompositeIndex>> ADDITIONAL_ANNOTATION_INDEXES_BY_MODULE = AttachmentKey.create(Map.class);"
"126","1206.txt","return file != null ? file : secondary.getConfigurationFile(relativePath);","return file != null ? file : secondary.getFile(relativePath);","return file != null ? file : secondary.getFile(relativePath);"
"127","1207.txt","// Ignore","ROOT_LOGGER.deprecatedAttribute(attribute.getLocalName(), Element.EVICTION.getLocalName(), ""ISPN-1268"");","// Ignore"
"128","12076.txt","componentsForViewName = applicationDescription.getComponentsForViewName(typeName, deploymentRoot.getRoot());","componentsForViewName = applicationDescription.getComponentsForViewName(typeName);","componentsForViewName = applicationDescription.getComponents(beanName, typeName, deploymentRoot.getRoot());"
"129","12096.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"130","1212.txt",".setValidator(new StringLengthValidator(1, false, true))",".setValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))"
"131","12172.txt","super(null, DomainResolver.getResolver(DOMAIN, false));","super(PathElement.pathElement(""this-will-be-ignored-since-we-are-root""), DomainResolver.getResolver(DOMAIN, false));","super.registerOperations(resourceRegistration);"
"132","12178.txt","cin.close();","in.close();","in.close();"
"133","12182.txt","assertEquals(1l, new BigFraction(Double.longBitsToDouble(0x0010000000000000L)).getNumeratorAsLong());","assertEquals(1l, new BigFraction(Double.MIN_NORMAL).getNumeratorAsLong());","assertEquals(1l, new BigFraction(Double.MAX_VALUE).getDenominatorAsLong());"
"134","12194.txt","public static final AttachmentKey<Boolean> EJB_ANNOTATION_PROPERTY_REPLACEMENT = AttachmentKey.create(Boolean.class);","public static final AttachmentKey<Boolean> ANNOTATION_PROPERTY_REPLACEMENT = AttachmentKey.create(Boolean.class);","public static final AttachmentKey<Boolean> JBOSS_DESCRIPTOR_PROPERTY_REPLACEMENT = AttachmentKey.create(Boolean.class);"
"135","12212.txt","if (cachedQT == null) {","if (cachedQ == null) {","if (cachedQ == null) {"
"136","12222.txt","if (isEarDeployment(deploymentUnit)) {","if (!appClientContainerMode && isEarDeployment(deploymentUnit)) {","if (parentdeploymentUnit != null) {"
"137","1223.txt","SSOBaseCase.executeNoAuthSingleSignOnTest(new URL(baseURL1, ""/""), new URL(baseURL2, ""/""), log);","SSOBaseCase.executeNoAuthSingleSignOnTest(baseURL1, baseURL2, log);","SSOBaseCase.executeFormAuthSingleSignOnTest(new URL(baseURL1, ""/""), new URL(baseURL2, ""/""),  log);"
"138","12234.txt","public void testReadingOfFirstStoredEntry() throws Exception {","public void testCompress264() throws Exception {","public void testReadingOfStoredEntry() throws Exception {"
"139","12236.txt","deferredCloseHolder.remove();","deferredCloseHolder.set(null);","deferredCloseHolder.set(holderMap);"
"140","12251.txt","super(defaultExecutor);","this(defaultExecutor, new SimpleAsyncUncaughtExceptionHandler());","super(defaultExecutor, exceptionHandler);"
"141","12317.txt","return builder.build();","return ""Binding successful"";","return buffer.getValue();"
"142","12318.txt","public static final AttachmentKey<AttachmentList<VirtualFile>> DEPLOYMENT_OVERRIDE_LOCATIONS = AttachmentKey.createList(VirtualFile.class);","public static final AttachmentKey<Map<String, MountedDeploymentOverlay>> DEPLOYMENT_OVERLAY_LOCATIONS = AttachmentKey.create(Map.class);","public static final AttachmentKey<AttachmentList<ServiceName>> BUNDLE_ACTIVE_DEPENDENCIES = AttachmentKey.createList(ServiceName.class);"
"143","1233.txt","exceptionResolver.resolveException(request, response, null, ex);","ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex);","exceptionResolver = new ResponseStatusExceptionResolver();"
"144","12333.txt","return null;","return new HashMap<String, Object>();","returnInfo.put(""host"", _local_drpc_id);"
"145","12342.txt","ROOT_LOGGER.errorContextModuleNotFound(consoleSlot == null ? ""main"" : consoleSlot);","ROOT_LOGGER.error(consoleSlot == null ? ""main"" : consoleSlot);","ROOT_LOGGER.consoleModuleNotFound(consoleSlot == null ? ""main"" : consoleSlot);"
"146","12353.txt","format.delimiter = delimiter;","this.delimiter = delimiter;","this.delimiter = delimiter;"
"147","12361.txt","assertFalse(expected.equals(new String(actual)));","assertEquals(expected.toUpperCase(), new String(actual));","assertTrue(expected.equals(new String(actual)));"
"148","12363.txt","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"149","12370.txt","import static test.util.TestResourceUtils.*;","import static org.springframework.tests.TestResourceUtils.qualifiedResource;","import static org.junit.Assert.*;"
"150","12417.txt",".setDefaultValue(new ModelNode(""""))",".setDefaultValue(new ModelNode(""default""))",".setDefaultValue(new ModelNode(-1))"
"151","12433.txt","return Integer.valueOf(this.value);","return new Integer(this.value);","return Integer.valueOf(intValue());"
"152","12434.txt","Integer i = Integer.valueOf(90);","Integer i = new Integer(90);","Integer two = Integer.valueOf(2);"
"153","12450.txt",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))"
"154","12453.txt",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))"
"155","12480.txt","return null; // TODO: implement","throw new UnsupportedOperationException();","return this.serviceEndpointContainer;"
"156","12486.txt","return this.ref.isWritableProperty(this.ref.name, this.contextObject, this.evalContext);","return true;","this.ref.writeProperty(this.contextObject, this.evalContext, this.ref.name, newValue);"
"157","12501.txt","return urlPathHelper.decodeRequestString(servletRequest, cookieValue.getValue());","return cookieValue.getValue();","return exprResolver.evaluate(placeholdersResolved, expressionContext);"
"158","12513.txt","assertCast(ArrayType.class, converter.getOpenType());","ArrayType<?> arrayType = assertCast(ArrayType.class, converter.getOpenType());","Assert.assertEquals(SimpleType.STRING, converter.getOpenType());"
"159","12569.txt","assertEquals(Ordered.LOWEST_PRECEDENCE, compositeResolver.getOrder());","assertEquals(0, compositeResolver.getOrder());","assertEquals(Ordered.HIGHEST_PRECEDENCE, compositeResolver.getOrder());"
"160","12570.txt","if(subModel.has(attrName)) {","if(operation.hasDefined(attrName)) {","if(operation.hasDefined(attrName)) {"
"161","12576.txt","setBoottime = true;","setValue = true;","setName = true;"
"162","12579.txt",".setValidator(new IntRangeValidator(1, true, true))",".setValidator(new IntRangeValidator(0, true, true))",".setValidator(new IntRangeValidator(-1, true, true))"
"163","12600.txt","return new HashMap<String, Object>();","return null;","return unmarshaller;"
"164","12614.txt","op.get(""enabled"").set(""true"");","op.get(""enabled"").set(""false"");","op.get(""enabled"").set(""false"");"
"165","12615.txt","return this.helperConverter.matches(sourceType, targetType);","return true;","return this.helperConverter.convert(Arrays.asList(ObjectUtils.toObjectArray(source)), sourceType, targetType);"
"166","12616.txt","return this.helperConverter.matches(sourceType, targetType);","return true;","return this.helperConverter.convert(Arrays.asList(ObjectUtils.toObjectArray(source)), sourceType, targetType);"
"167","12617.txt","return this.helperConverter.matches(sourceType, targetType);","return true;","return this.helperConverter.convert(Arrays.asList(ObjectUtils.toObjectArray(source)), sourceType, targetType);"
"168","12641.txt","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","final int attCount = reader.getAttributeCount();"
"169","12671.txt","public EntityGraph<?> getEntityGraph(String s) {","public <T> EntityGraph<T> getEntityGraph(String s) {","public EntityGraph<?> createEntityGraph(String s) {"
"170","12681.txt","log.infof(""started ResourceAdapterService %s"", context.getController().getName());","log.errorf(""started ResourceAdapterService %s"", context.getController().getName());","log.infof(""stopped ResourceAdapterService %s"", context.getController().getName());"
"171","12682.txt","clientInboundChannel(), brokerChannel(), userDestinationResolver());","clientInboundChannel(), clientOutboundChannel(), brokerChannel(), userDestinationResolver());","clientInboundChannel(), clientOutboundChannel(), brokerMessagingTemplate());"
"172","12684.txt","return Integer.valueOf(toHashCode());","return toHashCode();","return builder.toHashCode();"
"173","12686.txt","return JAVA_CONTEXT_SERVICE_NAME.append(context);","return null;","return GLOBAL_CONTEXT_SERVICE_NAME.append(context.substring(12));"
"174","1269.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);"
"175","1271.txt","assertNull(parser.getRecord());","assertTrue(parser.getRecord() == null);","assertEquals(res.length, records.size());"
"176","12722.txt","return new Annotation[0];","return null;","return cachedFieldAnnotations;"
"177","12747.txt","catch (Exception ex) {","catch (SQLException ex) {","catch (SQLException ex) {"
"178","12748.txt","""La taille de l'\u00e9chantillon doit \u00eatre positive"" },","""Taille de l'\u00e9chantillon doit \u00eatre positif"" },","""la taille de l''\u00e9chantillon doit \u00eatre positive ({0})"" },"
"179","12788.txt","int read = IOUtils.readFully(this, namebuffer, 0, bufflen);","int read = read(namebuffer, 0, bufflen);","int read = IOUtils.readFully(input, name);"
"180","1281.txt","public static <T> boolean isEmpty(T[] array) {","public static boolean isEmpty(Object[] array) {","public static boolean isEmpty(byte[] array) {"
"181","12853.txt","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(tuple.isTick()) {","if(ct.equals(CoordType.single())) {"
"182","12865.txt","// this.remoteFileRepositoryExecutor = remoteFileRepositoryExecutor;","this.remoteFileRepositoryExecutor = remoteFileRepositoryExecutor;","remoteFileRepositoryExecutor = this.remoteFileRepositoryExecutor;"
"183","12870.txt","this.parseAttributes(reader, node, attributes, null);","this.parseAttributes(reader, node, attributes, EnumSet.copyOf(attributes));","this.parseAttributes(reader, node, expectedAttributes, null);"
"184","12875.txt","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","zkStr,"
"185","12888.txt","new AssertThrows(ClassCastException.class) {","new AssertThrows(IllegalArgumentException.class) {","new AssertThrows(IllegalArgumentException.class) {"
"186","12891.txt","catch (ClassCastException e) {","catch (IllegalArgumentException e) {","catch (IllegalStateException e) {"
"187","12892.txt","new AssertThrows(ClassCastException.class) {","new AssertThrows(IllegalArgumentException.class) {","new AssertThrows(IllegalStateException.class) {"
"188","1290.txt","serviceBuilder.addDependency(ContextNames.serviceNameOfNamingStore(applicationName, moduleName, componentName, bindingName), NamingStore.class, service.getNamingStoreInjector());","serviceBuilder.addDependency(contextServiceName, NamingStore.class, service.getNamingStoreInjector());","ServiceBuilder<ManagedReferenceFactory> serviceBuilder = serviceTarget.addService(ContextNames.serviceNameOfContext(applicationName, moduleName, componentName, bindingName), service);"
"189","1291.txt","getComponentInstanceSystemInterceptorFactories().add(interceptorFactory);","getComponentSystemInterceptorFactories().add(interceptorFactory);","getComponentSystemInterceptorFactories().add(interceptorFactory);"
"190","12924.txt","if (nextSecurityDomain == null || nextSecurityDomain.isEmpty()) {","if(nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null) {"
"191","12977.txt","@Test @Ignore(""AS7-2707"")","@Test","@Test"
"192","13004.txt","return setBolt(id, new BatchBoltExecutor(new CommitterBoltExecutor(bolt)), parallelism, true);","return setBolt(id, new CommitterBoltExecutor(bolt), parallelism, true);","return setBolt(id, new BatchBoltExecutor(bolt), parallelism, false);"
"193","13009.txt","throw new IllegalStateException(""<?"" + TemplateParser.EXTENSIONS_PI + ""?> should not take any data"");","throw new IllegalStateException(""<?"" + TemplateParser.SUBSYSTEMS_PI + ""?> should not take any data"");","throw new IllegalStateException(""<?"" + TemplateParser.SOCKET_BINDINGS_PI + ""?> should not take any data"");"
"194","13012.txt","public void testDropPhase1Objective() {","public void testdiscardArtificialVariables() {","public void testSerial() {"
"195","13032.txt","RuntimeException failedToWriteConfigurationFile(@Cause Throwable e, File fileName);","String failedToWriteConfigurationFile(File fileName);","DeploymentUnitProcessingException failedToConfigureLogging(@Cause Throwable cause, String fileName);"
"196","13047.txt","this.separator = """";","this.seperator = """";","this.separator = ""="";"
"197","13048.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (pools.isEmpty()) {"
"198","13051.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (driver.isFromDeployment()) {"
"199","13052.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (driver.isFromDeployment()) {"
"200","13054.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (operation.get(attribute).isDefined()) {"
"201","13055.txt","return context.isNormalServer();","return context.getType() == OperationContext.Type.SERVER;","context.removeService(controller.getName());"
"202","13056.txt","return context.isNormalServer();","return context.getType() == OperationContext.Type.SERVER;","return pes;"
"203","13057.txt","if (!context.isNormalServer()) {","if (context.getType() != OperationContext.Type.SERVER) {","if (!failureRecorded) {"
"204","13059.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (controller != null) {"
"205","13060.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (controller != null) {"
"206","13064.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if(config.hasDefined(CommonAttributes.ROLE)) {"
"207","13065.txt","if(context.isNormalServer()) {","if(context.getType() == OperationContext.Type.SERVER) {","if(controller != null) {"
"208","13066.txt","if(context.isNormalServer()) {","if(context.getType() == OperationContext.Type.SERVER) {","if(controller != null) {"
"209","13067.txt","if(context.isNormalServer()) {","if(context.getType() == OperationContext.Type.SERVER) {","if(! value.isDefined()) {"
"210","13068.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (!context.hasFailureDescription()) {"
"211","13069.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","while (entries.hasMore()) {"
"212","13074.txt","return context.isNormalServer();","return context.getType() == OperationContext.Type.SERVER;","context.reloadRequired();"
"213","13075.txt","return context.isNormalServer();","return context.getType() == OperationContext.Type.SERVER;","context.reloadRequired();"
"214","13076.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (remoteDestination) {"
"215","13077.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (controller != null) {"
"216","13078.txt","if (context.isNormalServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (controller != null) {"
"217","13156.txt","log.errorf(""Operation (%s) failed - address: (%s) - failure description: %s"", operation.get(OP), operation.get(OP_ADDR), response.get(FAILURE_DESCRIPTION));","log.warnf(""Operation (%s) failed - address: (%s)"", operation.get(OP), operation.get(OP_ADDR));","log.errorf(t, ""Operation (%s) failed - address: (%s)"", operation.get(OP), operation.get(OP_ADDR));"
"218","13157.txt","registry.registerReadOnlyAttribute(attr, null);","registry.registerReadWriteAttribute(attr, null, QueueConfigurationWriteHandler.INSTANCE);","registry.registerReadOnlyAttribute(attr, QueueReadAttributeHandler.INSTANCE);"
"219","13158.txt","registry.registerReadOnlyAttribute(attr, null);","registry.registerReadWriteAttribute(attr, null, JMSQueueConfigurationWriteHandler.INSTANCE);","registry.registerReadOnlyAttribute(attr, JMSQueueReadAttributeHandler.INSTANCE);"
"220","13160.txt",".setValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true))",".setValidator(new StringLengthValidator(1, true))"
"221","13172.txt","super(existing, globalRollback);","super(existing);","super(existing, setPlan);"
"222","13188.txt","final ModelNode valueTypeDesc = getValueTypeDescription(true);","final ModelNode valueTypeDesc = getValueTypeDescription(false);","final ModelNode valueTypeDesc = getValueTypeDescription(false);"
"223","13204.txt","public static final AttachmentKey<AttachmentList<String>> DEFERRED_MODULES = AttachmentKey.createList(String.class);","public static final AttachmentKey<Boolean> DEFERRED_MODULE_PHASE = AttachmentKey.create(Boolean.class);","public static final AttachmentKey<AttachmentList<String>> INDEX_IGNORE_PATHS = AttachmentKey.createList(String.class);"
"224","13214.txt","result = result.replace(""${jboss.management.https.port:9993}"", ""9993"");","result = result.replace(""${jboss.management.https.port:9443}"", ""9443"");","result = result.replace(""${jboss.management.http.port:9990}"", ""9990"");"
"225","13219.txt","final PathAddress address = PathAddress.pathAddress(executionContext.getOperation().get(OP_ADDR));","final PathAddress address = PathAddress.pathAddress(executionContext.getOperation().require(ModelDescriptionConstants.OP_ADDR));","final PathAddress address = PathAddress.pathAddress(executionContext.getOperation().get(ModelDescriptionConstants.OP_ADDR));"
"226","13222.txt","public boolean isEmpty() {","boolean isEmpty() {","public boolean equals(Object o) {"
"227","1326.txt","private int maxCodeLen = 4;","protected int maxCodeLen = 4;","private int maxLength;"
"228","13285.txt","public static Set<Locale> availableLocaleSet() {","public static synchronized Set<Locale> availableLocaleSet() {","public static List<Locale> availableLocaleList() {"
"229","13286.txt","bindName = bindName.substring(7);","bindName = bindName.substring(6);","bindName = bindName.substring(6);"
"230","1329.txt","int desiredNumWorkers = topology.getNumWorkers();","int desiredNumWorkers = ((Number) topology.getConf().get(Config.TOPOLOGY_WORKERS)).intValue();","int assignedNumWorkers = this.getAssignedNumWorkers(topology);"
"231","13299.txt","this.tag.setServletRelativeAction(action);","this.tag.setAction(action);","this.tag.setAction(action);"
"232","13300.txt","public static final AttachmentKey<AttachmentList<ServiceName>> JNDI_DEPENDENCIES = AttachmentKey.createList(ServiceName.class);","public static final AttachmentKey<Set<ServiceName>> JNDI_DEPENDENCIES = AttachmentKey.create(Set.class);","public static final AttachmentKey<AttachmentList<ServiceName>> NEXT_PHASE_DEPS = AttachmentKey.createList(ServiceName.class);"
"233","13301.txt","return delegate.getInvocationTimeout();","return 0;","return delegate.getEndpointName();"
"234","13335.txt","ctx.printColumns(Util.getDeployments(client));","ctx.printLine(""File path is missing."");","ctx.printLine(Util.getFailureDescription(result));"
"235","13336.txt","TransformationDescription.Tools.register(description, reg);","description.register(reg);","return getTransfomers(target).transformOperation(context, operation);"
"236","1337.txt","if (service != null) {","if (sslIdentity != null) {","if (response == null) {"
"237","13399.txt",".setAllowExpression(false)",".setAllowExpression(true)",".setAllowExpression(true)"
"238","13409.txt","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL1, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));"
"239","13436.txt","return CommonDescriptions.getValidateAddressOperation(locale);","return new ModelNode();","return CommonDescriptions.getSubsystemDescribeOperation(locale);"
"240","13449.txt","if (operationObject.hasDefined(name)&&isDeprecated()){","if (isDeprecated()){","if(operationObject.hasDefined(alternative)) {"
"241","13451.txt","resourceRegistration.registerOperationHandler(RootResourceHack.DEFINITION, RootResourceHack.INSTANCE);","resourceRegistration.registerOperationHandler(RootResourceHack.NAME, RootResourceHack.INSTANCE, RootResourceHack.INSTANCE, false, OperationEntry.EntryType.PRIVATE, runtimeOnlyFlag);","resourceRegistration.registerOperationHandler(WhoAmIOperation.DEFINITION, WhoAmIOperation.INSTANCE, true);"
"242","13453.txt","String VAULT_OPTIONS = ""vault-options"";","String OPTIONS = ""options"";","String VAULT_OPTION = ""vault-option"";"
"243","13454.txt","if (prePassivates != null) {","if (preDestroys != null) {","if (preDestroys != null) {"
"244","1346.txt","throw new IllegalStateException(""No resource adapter registered with resource adapter name "" + resourceAdapterName);","throw new IllegalStateException(""Not found RA registered as "" + resourceAdapterName);","throw new IllegalStateException(""found more than one RA registered as "" + resourceAdapterName);"
"245","13517.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"246","13518.txt","if (isActive()) {","if (this.webSocketSession != null) {","if (logger.isTraceEnabled()) {"
"247","1353.txt","UUID(""uuid"", ""com.arjuna.ats.internal.arjuna.utils.UuidProcessId""),","UUID(""uuid"", ""org.jboss.as.txn.UuidProcessId""),","FILE(""file"", ""com.arjuna.ats.internal.arjuna.utils.FileProcessId""),"
"248","13535.txt","String hostUrl = ""remote://localhost:4447"";","String hostUrl = ""remote://localhost:9999"";","String value = null;"
"249","13604.txt",".addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS, VaultResourceDefinition.OPTIONS)",".addRejectCheck(RejectAttributeChecker.SIMPLE_LIST_EXPRESSIONS, VaultResourceDefinition.OPTIONS)",".addRejectCheck(RejectAttributeChecker.SIMPLE_EXPRESSIONS, VaultResourceDefinition.CODE)"
"250","13605.txt","return TypeDescriptor.NULL;","return null;","return TypeDescriptor.valueOf(element.getClass());"
"251","13606.txt","@Test","@Ignore@Test","@SuppressWarnings(""unused"")"
"252","13618.txt","tableau.dropPhase1Objective();","tableau.discardArtificialVariables();","solvePhase1(tableau);"
"253","1363.txt","retval.append(TEST_DATA_PATH);","retval.append(""data/test/"");","retval.append("".obj"");"
"254","13639.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"255","13676.txt",".setDefaultValue(new ModelNode(""""))",".setDefaultValue(new ModelNode(""default""))",".setDefaultValue(new ModelNode(-1))"
"256","13685.txt","if(!closing) {","while(!closing) {","if (!closing) {"
"257","13707.txt","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","doHandle(ctx);","ctx.enterState(EscapeCharacterState.INSTANCE);"
"258","13730.txt","p = interpolator.interpolate(xval, wyval, wzval);","p = interpolator.interpolate(xval, wyval, zval);","p = interpolator.interpolate(xval, wyval, zval);"
"259","13756.txt","listeners.remove(listener);","listeners.add(listener);","listeners.add(listener);"
"260","13762.txt","return init().read(b, off, len);","return init().read();","return init().read();"
"261","13766.txt","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);"
"262","13796.txt","content.clear();","content.setEmptyList();","context.completeStep();"
"263","1381.txt","throw XtsAsMessages.MESSAGES.txBridgeInboundRecoveryServiceFailedToStart();","throw new StartException(""TxBridge inbound recovery service start failed"", e);","final ClassLoader loader = TxBridgeInboundRecoveryService.class.getClassLoader();"
"264","13816.txt","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(tuple.isTick()) {","if(ct.equals(CoordType.single())) {"
"265","1382.txt","throw XtsAsMessages.MESSAGES.txBridgeOutboundRecoveryServiceFailedToStart();","throw new StartException(""TxBridge outbound recovery service start failed"", e);","final ClassLoader loader = TxBridgeOutboundRecoveryService.class.getClassLoader();"
"266","13854.txt","throw new NullPointerException(""directory must not be null"");","throw new NullPointerException(""directorydirectory must not be null"");","throw new NullPointerException(""Source must not be null"");"
"267","13864.txt","if (defaultValue != null && defaultValue.isDefined()) {","if (!forOperation && defaultValue != null && defaultValue.isDefined()) {","if (defaultValue != null) {"
"268","13881.txt","throw new CommandFormatException(""'"" + value + ""' doesn't follow format {rollout server_group_list [rollback-across-groups]}"");","return null;","throw new CommandFormatException(""Too many headers: "" + headers);"
"269","13882.txt","if (!ctx.isEndOfContent()) {","if (ctx.getCharacter() == '}') {","if(!ctx.isEndOfContent()) {"
"270","13887.txt","if (!hostControllerInfo.isMasterDomainController() && !environment.isUseCachedDc()) {","if (!hostControllerInfo.isMasterDomainController()) {","if (!hostControllerInfo.isMasterDomainController()) {"
"271","1390.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"272","13915.txt","} catch (Exception iae) {","} catch (IllegalArgumentException iae) {","} catch (Exception e) {"
"273","13935.txt","if(descr != null && (descr.contains(""JBAS014807"") || descr.contains(""JBAS014793""))) {","if(descr != null && descr.contains(""JBAS014807"")) {","if(descr != null && descr.contains(""JBAS014807"")) {"
"274","13939.txt","return transformers.transformRootResource(context, root);","return transformers.transformResource(Transformers.Factory.getTransformationContext(transformers, context), root);","final Resource root = transformResource(context, untransformedRoot);"
"275","13955.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"276","13956.txt","if (context.isRollbackOnRuntimeFailure()) {","if (ModelControllerImpl.RB_ON_RT_FAILURE.get() == Boolean.TRUE) {","if (!controller.getSubstate().isRestState()) {"
"277","1399.txt","if (rollbackOperation == null || !rollbackOperation.isDefined()) {","if (rollbackOperation == null) {","if (rollbackStepOutcome == null || !rollbackStepOutcome.isDefined()) {"
"278","1400.txt","sb.append(config.getRowDelimiter());","sb.append(""\n"");","sb.append(config.getDelimiter());"
"279","14093.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"280","14094.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"281","14095.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"282","14125.txt","UriUtils.encodeUri(""http://www.google.com/?q=z\u00fcrich"", ENC));","UriUtils.encodeUri(""http://www.google.com/?q=zrich"", ENC));","UriUtils.encodeUri(""docs/guide/collections/designfaq.html#28"", ENC));"
"283","14153.txt","builder.addDependency(DependencyType.OPTIONAL, RegistryInstallerService.SERVICE_NAME);","builder.addDependency(RegistryInstallerService.SERVICE_NAME);","builder.addDependency(DependencyType.OPTIONAL, EJBRemoteConnectorService.SERVICE_NAME);"
"284","14154.txt","builder.addDependency(DependencyType.OPTIONAL, RegistryInstallerService.SERVICE_NAME);","builder.addDependency(RegistryInstallerService.SERVICE_NAME);","builder.addDependency(DependencyType.OPTIONAL, EJBRemoteConnectorService.SERVICE_NAME);"
"285","14161.txt","return this.id.hashCode();","return this.id.hashCode() ^ this.attribute.hashCode();","return this.id;"
"286","14170.txt","new Percentile(0);","percentile = new Percentile(0);","return new Percentile(95.0);"
"287","14172.txt","checkReadAttributeOperationDescription(result.get(RESULT));","assertFalse(result.get(RESULT).isDefined());","checkRootSubModelDescription(result.get(RESULT), true);"
"288","14175.txt","return new ValueManagedReference(new ImmediateValue<Object>(targetValueToInject));","new ValueManagedReference(new ImmediateValue<Object>(targetValueToInject));","return new ValueManagedReference(new ImmediateValue<Object>(entityManager));"
"289","14194.txt","return (this.start < other.start ? -1 : (this.start == other.start ? 0 : 1));","return Integer.compare(this.start, other.start);","return (this.start == other.start && this.end == other.end);"
"290","14202.txt","protected void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","private void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","protected void parsePassivationStore(final XMLExtendedStreamReader reader, List<ModelNode> operations) throws XMLStreamException {"
"291","14229.txt",".setAllowExpression(true)",".setAllowExpression(false)",".setAllowExpression(true)"
"292","14232.txt","Assert.assertEquals(""a"",response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());","Assert.assertFalse(response.containsHeader(SessionOperationServlet.REMOVED_ATTRIBUTES));","Assert.assertEquals(""a"", response.getFirstHeader(SessionOperationServlet.REMOVED_ATTRIBUTES).getValue());"
"293","14256.txt","Assert.assertTrue(result.next());","junit.framework.Assert.assertTrue(result.next());","Assert.assertFalse(result.next());"
"294","143.txt",".setValidator(new IntRangeValidator(1, 500, true, false))",".setValidator(new IntRangeValidator(1, 200, true, false))",".setValidator(new IntRangeValidator(1, 100, true, false))"
"295","1435.txt","public CpioArchiveEntry getNextEntry() throws IOException {","public ArchiveEntry getNextEntry() throws IOException {","public CpioArchiveEntry getNextCPIOEntry() throws IOException {"
"296","1442.txt","handleElementText(reader, element, ClusterConnectionDefinition.ADDRESS.getName(), clusterConnectionAdd);","handleElementText(reader, element, CommonAttributes.CLUSTER_CONNECTION_ADDRESS.getName(), clusterConnectionAdd);","handleElementText(reader, element, clusterConnectionAdd);"
"297","1445.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"298","14450.txt","return false;","return true;","return true;"
"299","14452.txt","if (isQuoteChar(intch)) {","if (isEncapsulator(intch)) {","if (isCommentStart(intch)) {"
"300","1446.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"301","1447.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"302","14479.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());"
"303","1448.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"304","14480.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","return context.isNormalServer();"
"305","14481.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","return context.isNormalServer();"
"306","14482.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","controller.addListener(listener);"
"307","14483.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult();"
"308","14485.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(name);"
"309","14486.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(name);"
"310","14487.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.reloadRequired();"
"311","14488.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(subsystems);"
"312","1449.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"313","14491.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.reloadRequired();"
"314","14493.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);"
"315","1450.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"316","14500.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","copy.get(OP_ADDR).set(mapped.toModelNode());"
"317","14501.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.revertRestartRequired();"
"318","14503.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","container.shutdown();"
"319","14509.txt","throw new CommandLineException(""else request failed: "" + Util.getFailureDescription(response));","new CommandLineException(""else request failed: "" + Util.getFailureDescription(response));","throw new CommandLineException(""else request failed"", e);"
"320","1451.txt","public void ejbHomeResetId() {","void ejbHomeResetId() {","public void ejbRemove() {"
"321","14638.txt","if (lines.isEmpty()) {","if (lines.size() == 0) {","if (lines.size() < 2) {"
"322","14643.txt","public void testCopy_ByteArray_OutputStream() throws Exception {","public void testByteArrayToOutputStream() throws Exception {","public void testToByteArray_InputStream_Size() throws Exception {"
"323","14654.txt",".setDefaultValue(new ModelNode(20))",".setDefaultValue(new ModelNode(60))",".setDefaultValue(new ModelNode(60))"
"324","1469.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHomeHandleMessage());"
"325","1470.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"326","1471.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"327","14714.txt","continue;","throw new IllegalStateException(""Failed to get public resource URL path for "" + pathWithinMapping);","return null;"
"328","14718.txt","@Deprecated static final String BATCHING = ""batching"";","static final String BATCHING = ""batching"";","@Deprecated static final String VIRTUAL_NODES = ""virtual-nodes"";"
"329","1472.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"330","1473.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"331","14730.txt","class ComparatorUtils {","public class ComparatorUtils {","public ComparatorUtils() {"
"332","14735.txt","throw new RuntimeException(e);","// ignore","entity = response.getEntity();"
"333","14736.txt","public interface RPattern {","public static interface RPattern {","public interface PhonemeExpr {"
"334","14737.txt","deployed.put(deploymentName, new DeploymentMarker(doDeployTimestamp, archive));","deployed.put(deploymentName, new DeploymentMarker(deployedMarker.lastModified(), archive));","deployed.put(deploymentName, new DeploymentMarker(markerLastModified, archive));"
"335","1474.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"336","1475.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"337","1476.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"338","1477.txt","protected void performRuntime(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {","protected void recoverServices(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {"
"339","14788.txt","header.addTo(headersNode);","headersNode.add().set(header.toModelNode());","headers.add(header);"
"340","14789.txt","public static final CharacterHandler NOOP_CHARACTER_HANDLER = new CharacterHandler(){","static final CharacterHandler NOOP_CHARACTER_HANDLER = new CharacterHandler(){","public static final CharacterHandler CONTENT_CHARACTER_HANDLER = new CharacterHandler() {"
"341","14790.txt","if (ctx.getCharacter() == '}') {","if (!ctx.isEndOfContent()) {","if (buffer.length() == 0) {"
"342","14819.txt","subModel.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER).set(operation.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER));","subModel.get(RECOVERY_ENVIRONMENT, STATUS_BINDING).set(operation.get(RECOVERY_ENVIRONMENT, STATUS_BINDING));","subModel.get(CORE_ENVIRONMENT, RELATIVE_TO).set(operation.get(CORE_ENVIRONMENT, RELATIVE_TO));"
"343","14826.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(hash);"
"344","14830.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","super.execute(context, operation);"
"345","14834.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(runningModeControl.getRunningMode().name());"
"346","14835.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.revertReloadRequired();"
"347","14837.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(model);"
"348","14838.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(model);"
"349","14845.txt","protected static final PathElement PATH_PERSISTENT_SESSIONS = PathElement.pathElement(Constants.SETTING, Constants.PERSISTENT_SESSIONS);","protected static final PathElement PATH_DEVELOPMENT_MODE = PathElement.pathElement(Constants.SETTING, Constants.DEVELOPMENT_MODE);","protected static final PathElement PATH_SERVLET_CONTAINER = PathElement.pathElement(Constants.SERVLET_CONTAINER);"
"350","1486.txt","PatchManagementLogger.ROOT_LOGGER.debugf(t, ""failed to get history"");","t.printStackTrace();","throw PatchManagementMessages.MESSAGES.failedToShowHistory(t);"
"351","14870.txt","return new HashMap<String, String>();","return null;","Map<String, String> props = new HashMap<String, String>();"
"352","14876.txt","return other instanceof ParamNameList && equals((ParamNameList)other);","return other instanceof ParamList && equals((ParamList)other);","return other instanceof ParamList && equals((ParamList)other);"
"353","14882.txt","Method m2 = getNameMethod;","// Method m2 = getNameMethod;","Method m = getNameMethod;"
"354","1489.txt","throw PatchMessages.MESSAGES.patchTypesDontMatch();","throw new RuntimeException(""patch types don't match"");","throw PatchMessages.MESSAGES.illegalPatchName(patchId);"
"355","149.txt","return sourceCollection;","return source;","return source;"
"356","14913.txt","context.removeService(ChannelService.getFactoryServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getStackServiceName(ChannelService.DEFAULT));","context.removeService(ChannelFactoryService.getServiceName(ChannelFactoryService.DEFAULT));"
"357","14916.txt","if (ejbMethodSecurityMetaData.isDenyAll()) {","if (ejbMethodSecurityMetaData.isAccessDenied()) {","if (!ejbMethodSecurityMetaData.isPermitAll()) {"
"358","14917.txt","throw new PasswordRequiredException();","throw new IOException(""Cannot read encrypted files without a password"");","throw ioe;"
"359","14929.txt","@Ignore(""causing an osgi error during server reload"")","//@Ignore(""AS7-4185"")","@Test"
"360","14934.txt","int RETURN_DOMAIN_MODEL = 0x13;","int PARAM_DOMAIN_MODEL = 0x13;","int RETURN_HOST_MODEL = 0x63;"
"361","14938.txt","return this.id.hashCode();","return this.id.hashCode() ^ this.attribute.hashCode();","return this.id;"
"362","14946.txt","if(tuple.isTick()) {","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(ct.equals(CoordType.single())) {"
"363","14949.txt","registration.registerSubModel(new PropertyResourceDefinition());","registration.registerSubModel(PropertyResourceDefinition.INSTANCE);","registration.registerSubModel(new RemoteSiteResourceDefinition());"
"364","1495.txt",".setAllowExpression(false)",".setAllowExpression(true)",".setAllowExpression(true)"
"365","14950.txt","modulesDir = serverEnvironment.getModulesDir();","modulesDir = new File(serverEnvironment.getHomeDir() + File.separator + ""modules"");","bundlesDir = serverEnvironment.getBundlesDir();"
"366","14976.txt","new DoubleRange(nonComparableNumber);","Range r = new DoubleRange(nonComparableNumber);","new DoubleRange(Double.NaN);"
"367","14977.txt","new FloatRange(nonComparableNumber);","Range r = new FloatRange(nonComparableNumber);","new FloatRange(null);"
"368","14978.txt","new IntRange(nonComparableNumber);","Range r = new IntRange(nonComparableNumber);","new IntRange(null);"
"369","14979.txt","new LongRange(nonComparableNumber);","Range r = new LongRange(nonComparableNumber);","new LongRange(null);"
"370","1498.txt","if(protocol != null) connector.get(PROTOCOL).set(protocol);","connector.get(PROTOCOL).set(protocol);","if(proxyPort != null) connector.get(PROXY_PORT).set(proxyPort);"
"371","15010.txt","final ServiceName baseName = configuration.getComponentDescription().getServiceName();","final ServiceName baseName = deploymentUnit.getServiceName().append(""component"").append(componentName);","final ServiceName serviceName = viewConfiguration.getViewServiceName();"
"372","15015.txt","state.cleanupBefore(txid);","state.commit(txid);","_state.close();"
"373","1504.txt","root.registerOperationHandler(SubsystemDescriptionDump.DEFINITION, dumper, false);","root.registerOperationHandler(SubsystemDescriptionDump.OPERATION_NAME, dumper, SubsystemDescriptionDump.DESCRIPTION, false, OperationEntry.EntryType.PRIVATE, EnumSet.of(OperationEntry.Flag.READ_ONLY));","root.registerOperationHandler(DeploymentFullReplaceHandler.OPERATION_NAME, dfrh, dfrh);"
"374","15053.txt","} else if (attributeName.equals(CommonAttributes.RECONNECT_ATTEMPTS.getName())) {","} else if (attributeName.equals(Common.RECONNECT_ATTEMPTS.getName())) {","} else if (attributeName.equals(CommonAttributes.CALL_TIMEOUT.getName())) {"
"375","15069.txt","buf.append("": "").append(t1.getClass().getName());","t1.printStackTrace();","buf.append("": "").append(t1.getLocalizedMessage());"
"376","15082.txt",".setDeploymentName(deploymentUnit.getName())",".setDeploymentName(pathName) //todo: is this deployment name concept really applicable?",".setDeploymentRoot(deploymentRoot)"
"377","15089.txt",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))"
"378","15093.txt",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))"
"379","15101.txt","public static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","public static final ServiceName JBOSS_SERVER_CONTROLLER = JBOSS_AS.append(""server-controller"");"
"380","15158.txt","throw InfinispanMessages.MESSAGES.failedToParse(e, url);","throw new IllegalStateException(String.format(""Failed to parse %s"", url), e);","throw InfinispanMessages.MESSAGES.failedToInjectSocketBinding(e, value);"
"381","15179.txt","if (includedGroup == null) {","if (group == null) {","if (group == null) {"
"382","15180.txt","ROOT_LOGGER.existingServerWithState(serverName, server.getState());","ROOT_LOGGER.existingServerWithState(serverName, existing.getState());","ROOT_LOGGER.existingServerWithState(serverName, existing.getState());"
"383","15201.txt","bootContext.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_DATASOURCE_REF,","bootContext.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_DATASOURCE_REF,","bootContext.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_DATA_SOURCE_DEFINITION_ANNOTATION,"
"384","15219.txt","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"385","15250.txt","public void testWalk() {","public void testWalk() throws MathUserException {","public void testAddFail() {"
"386","15251.txt","public void testWalk() {","public void testWalk() throws MathUserException {","public void testAddFail() {"
"387","15252.txt","public void testWalk() {","public void testWalk() throws MathUserException {","public void testAddFail() {"
"388","15253.txt","public void testWalk() {","public void testWalk() throws MathUserException {","public void testAddFail() {"
"389","1526.txt","Assert.notNull(""Content must not be null"");","Assert.notNull(""content is required"");","Assert.notNull(format, ""format must not be null"");"
"390","15299.txt","assertEquals(""guest"", headers.getPasscode());","assertEquals(""PROTECTED"", headers.getPasscode());","assertEquals(""guest"", headers.getLogin());"
"391","15302.txt","process(eeModuleDescription, targetDescription.getDeclaredValueClassName(), annotation.beanName(), annotation.lookup(), methodInfo.declaringClass(), targetDescription, localContextName);","process(eeModuleDescription, targetDescription.getClassName(), annotation.beanName(), annotation.lookup(), methodInfo.declaringClass(), targetDescription, localContextName);","process(eeModuleDescription, targetDescription.getDeclaredValueClassName(), annotation.beanName(), annotation.lookup(), fieldInfo.declaringClass(), targetDescription, localContextName);"
"392","15313.txt","state.pushActiveContextObject(new TypedValue(entry,TypeDescriptor.valueOf(Map.Entry.class)));","state.pushActiveContextObject(new TypedValue(new KeyValuePair(entry.getKey(), entry.getValue()),TypeDescriptor.valueOf(KeyValuePair.class)));","state.pushActiveContextObject(new TypedValue(element,TypeDescriptor.valueOf(op.getTypeDescriptor().getType())));"
"393","15316.txt","this.name = String.format(""//%s/%s"", this.hostName, this.contextName.isEmpty() ? ""ROOT"" : this.contextName);","this.name = String.format(""//%s/%s"", this.hostName, this.contextName);","log.trace(""processExpirationPassivation(): Looking for sessions that have expired ..."");"
"394","15319.txt",".setDefaultValue(new ModelNode().set(5000L))",".setDefaultValue(new ModelNode().set(1L))",".setDefaultValue(new ModelNode().set(25000L))"
"395","15333.txt","public static final OperationHandler RESOLVE = new ResolveAddressOperationHandler();","public static final ResolveAddressOperationHandler RESOLVE = new ResolveAddressOperationHandler();","public static final OperationHandler READ_CHILDREN_NAMES = new ReadChildrenNamesOperationHandler();"
"396","15345.txt","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","zkStr,"
"397","15364.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"398","15365.txt","localFileRepository.deleteDeployment(deploymentHash);","//NOOP","localPath = localFileRepository.getDeploymentRoot(hash);"
"399","15367.txt","super();","; // empty constructor","public static Iterator iterator(Class enumClass) {"
"400","15398.txt","assertEquals(Locale.GERMANY, format1.getLocale());","assertSame(Locale.GERMANY, format1.getLocale());","assertEquals(Locale.GERMANY, format2.getLocale());"
"401","15411.txt","if (!StringUtils.isEmpty(value)) {","if (value != null) {","if (iterator.hasNext()) {"
"402","15519.txt","monitor.clear();","monitor.removeController(phaseService);","monitor.addController(phaseService);"
"403","15523.txt","tmp = serverTempDir;","tmp = new File(serverBaseDir, ""tmp"");","serverTempDir = tmp;"
"404","1553.txt","if(cookieConfig.getComment() != null) {","if(cookieConfig.getDomain() != null) {","if(cookieConfig.getDomain() != null) {"
"405","15530.txt","cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&","cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&","cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&"
"406","15547.txt",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))"
"407","15550.txt",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))"
"408","15563.txt","public static void assertFileDoesNotExist(File rootFile, String... segments) {","static void assertFileDoesNotExist(File rootFile, String... segments) {","public static void assertDirDoesNotExist(File rootDir, String... segments) {"
"409","15569.txt","public void awaitHostController(long start) throws InterruptedException, TimeoutException {","private void awaitHostController(long start) throws InterruptedException, TimeoutException {","public void awaitServers(long start) throws InterruptedException, TimeoutException {"
"410","15604.txt","public static final int INSTALL_EE_COMPONENT = 0x0E00;","public static final int INSTALL_BEAN_CONTAINER                      = 0x0E00;","public static final int INSTALL_MC_BEAN_DEPLOYMENT                  = 0x0900;"
"411","15778.txt","assertThat(sw.getTotalTimeMillis(), lessThan(350L));","assertThat(sw.getTotalTimeMillis(), lessThan(250L));","assertThat(sw.getTotalTimeMillis(), lessThan(250L));"
"412","15780.txt","<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)","<T> HttpEntity<T> postForEntity(String url, Object request, Class<T> responseType, Map<String, ?> uriVariables)","<T> ResponseEntity<T> postForEntity(String url, Object request, Class<T> responseType, Object... uriVariables)"
"413","15784.txt","return classIntrospectorInjectedValue.getValue().createInstance(instance);","return null;","return classIntrospectorInjectedValue.getValue().createFactory(componentClass);"
"414","1581.txt","if (this.accept(key)) {","if (key instanceof String) {","if (this.alwaysSerialize) {"
"415","15830.txt","}, OperationContext.Stage.RUNTIME, true);","}, OperationContext.Stage.IMMEDIATE);","}, OperationContext.Stage.RUNTIME);"
"416","15833.txt","if(tuple.isTick()) {","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(ct.equals(CoordType.single())) {"
"417","15844.txt","if (this.accept(key)) {","if (key instanceof String) {","if (this.alwaysSerialize) {"
"418","15848.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"419","15891.txt","localContextName = fieldInfo.declaringClass().name().toString() + ""/"" + fieldName;","localContextName = fieldName;","localContextName = methodInfo.declaringClass().name().toString() + ""/"" + contextNameSuffix;"
"420","15893.txt","n = n | 1;//make sure n is odd","n = n | 1;//make sur n is odd","n += 2; // n % 3 == 1"
"421","15896.txt","captor.getValue().getHeaders().get(SimpMessageHeaderAccessor.ORIGINAL_DESTINATION));","captor.getValue().getHeaders().get(UserDestinationMessageHandler.SUBSCRIBE_DESTINATION));","captor.getValue().getHeaders().get(SimpMessageHeaderAccessor.DESTINATION_HEADER));"
"422","15988.txt","public static String readFileToString(File file) throws IOException {","public String readFileToString(File file) throws IOException {","public static String readFileToString(File file, String encoding) throws IOException {"
"423","15989.txt","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS)) {","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS) && topology_conf.get(Config.TOPOLOGY_GROUPS) != null) {","if (topology_conf.containsKey(Config.TOPOLOGY_USERS)) {"
"424","15995.txt","return (this.order != null ? this.order : Ordered.LOWEST_PRECEDENCE);","return this.order;","this.order = (this.order == null ? Ordered.HIGHEST_PRECEDENCE : this.order);"
"425","15999.txt","public void testEscapeHiragana() {","public void testEscapeHiragana() throws java.io.UnsupportedEncodingException {","public void testEscapeHtml() {"
"426","16000.txt","public void testInitialize() {","public void testInitialize() throws ConcurrentException {","public void testInitializeTempExecutor() {"
"427","16001.txt","public void testInitializeRuntimeEx() {","public void testInitializeRuntimeEx() throws ConcurrentException {","public void testAddInitializerNullInit() {"
"428","16004.txt","@RequestMapping(""{hotel}"")","@RequestMapping(""{hotel:.*}"")","@RequestMapping(""/{hotel}"")"
"429","16008.txt","return HttpRequest.get(""http://localhost:8080/jaxrsnoap/"" + urlPattern, 10, TimeUnit.SECONDS);","return HttpRequest.get(""http://localhost:8080/jaxrsnoap/"" + urlPattern, 5, TimeUnit.SECONDS);","return war;"
"430","16009.txt","public static final String READ_RESOURCE_OPERATION = ""read-resource"";","public static final String READ_SUB_MODEL_OPERATION = ""read-sub-model-operation"";","public static final String READ_RESOURCE_DESCRIPTION_OPERATION = ""read-resource-description"";"
"431","16078.txt","registration.registerSubModel(new PropertyResourceDefinition());","registration.registerSubModel(PropertyResourceDefinition.INSTANCE);","registration.registerSubModel(new RemoteSiteResourceDefinition());"
"432","16090.txt","final String bindingName = bindingConfiguration.getName().startsWith(""java:comp"") ? bindingConfiguration.getName() : ""java:comp/env/"" + bindingConfiguration.getName();","final String bindingName = bindingConfiguration.getName();","final String bindingName = bindingConfiguration.getName();"
"433","16116.txt","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);"
"434","16124.txt","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","doHandle(ctx);","ctx.enterState(EscapeCharacterState.INSTANCE);"
"435","16136.txt","command.add(TestSuiteEnvironment.getJavaPath());","command.add(""java"");","command.add(modulePath);"
"436","16156.txt","result.get(RESULT, Constants.RELEASE_PATCH_ID).set(info.getReleasePatchID());","result.get(RESULT, Constants.CUMULATIVE).set(info.getCumulativeID());","result.get(RESULT, Constants.PATCHES).add(patch);"
"437","16160.txt","tkn.type = COMMENT;","tkn = nextToken(tkn.reset());","tkn.type = TOKEN;"
"438","16170.txt","static final SimpleAttributeDefinition VIRTUAL_NODES =","private static final SimpleAttributeDefinition VIRTUAL_NODES =","static final SimpleAttributeDefinition OWNERS ="
"439","16197.txt",".setDefaultValue(new ModelNode().set(JdkORBSubsystemConstants.JDKORB_NAME_SERVICE_INIT_REF))",".setDefaultValue(new ModelNode().set(""JBoss/Naming/root""))",".setDefaultValue(new ModelNode().set(""jdkorb""))"
"440","16224.txt","boolean persistEnabled = true;","boolean persistEnabled = false;","boolean persistEnabled = false;"
"441","16253.txt","assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION));","assertTrue(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION));","assertFalse(objectMapper.getDeserializationConfig().isEnabled(MapperFeature.AUTO_DETECT_FIELDS));"
"442","16254.txt","assertThat(result, not(containsString(""<withoutView>without</withoutView>"")));","assertThat(result, containsString(""<withoutView>without</withoutView>""));","assertThat(result, not(containsString(""<withView2>with</withView2>"")));"
"443","16255.txt","assertFalse(s.contains(""\""without\"":\""without\""""));","assertTrue(s.contains(""\""without\"":\""without\""""));","assertFalse(s.contains(""\""with2\"":\""with\""""));"
"444","1626.txt","public JvmElement getJvm(String name) {","JvmElement getJvm(String name) {","public ServerElement getServer(String name) {"
"445","16260.txt","i += (buffer[offset] & 0x00000000000000FFL);","i += (((long) buffer[offset]) & 0x00000000000000FFL);","i += buffer[offset] & 0x000000FF;"
"446","1632.txt",".addHandlesReferralsFor(""ldap://"" + HOST_NAME + "":"" + SLAVE_LDAP_PORT)",".addHandlesReferralsFor(""ldap://"" + HOST_NAME + "":"" + MASTER_LDAP_PORT)",".setUrl(""ldap://"" + HOST_NAME + "":"" + SLAVE_LDAP_PORT)"
"447","16354.txt","if (dbd != null && !BeanFactoryUtils.isFactoryDereference(name)) {","if (dbd != null) {","if (!BeanFactoryUtils.isFactoryDereference(name)) {"
"448","16359.txt","configValidator.registerValidator(WEBSERVICE_SECURE_PORT, new ModelTypeValidator(ModelType.INT, true, true));","configValidator.registerValidator(WEBSERVICE_PORT, new ModelTypeValidator(ModelType.INT, true, true));","configValidator.registerValidator(WEBSERVICE_PORT, new ModelTypeValidator(ModelType.INT, true, true));"
"449","1639.txt","*","s     *","/** {@inheritDoc} */"
"450","16399.txt","} catch (IOException e) {","} catch (IllegalStateException e) {","} catch (ExecutionException e) {"
"451","16455.txt","return data.clone();","throw unsupported();","return data.length;"
"452","16477.txt","assertUnescapeJava("""", ""\\"");","assertUnescapeJava(""\\"", ""\\"");","assertUnescapeJava("""", """");"
"453","16492.txt","exceptionResolver.resolveException(request, response, null, ex);","ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex);","exceptionResolver = new ResponseStatusExceptionResolver();"
"454","16493.txt","throw new IllegalStateException(""Invalid event method return value: "" + returnValue);","throw new IllegalStateException(""Invalid action method return value: "" + returnValue);","throw new IllegalStateException(""Invalid action method return value: "" + returnValue);"
"455","16494.txt","throw new IOException(e);","throw (IOException) e.getCause();","throw new IOException(read(err));"
"456","16495.txt","throw new OperationFailedException(MESSAGES.nullVar(""plan"").getLocalizedMessage());","throw new OperationFailedException(""rolloutPlan argument is null."");","throw new OperationFailedException(MESSAGES.serverGroupExpectsSingleChild(plan.toString()));"
"457","16508.txt","if (key instanceof String) {","if (this.accept(key)) {","if (value instanceof HttpSessionBindingListener) {"
"458","16544.txt",".setAllowExpression(true)",".setAllowExpression(false)",".setAllowExpression(false)"
"459","16552.txt","@Test(expected = IllegalArgumentException.class)","@Test(expected = IllegalStateException.class)","@Test(expected = IllegalStateException.class)"
"460","16564.txt","return ""#BeanWithSimpleInjected#"" + context.proceed();","return context.proceed();","log.info(""-----> Constructed BeanWithSimpleInjected, simple="" + simple);"
"461","16572.txt","context.removeService(ChannelService.getStackServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getFactoryServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getServiceName(ChannelService.DEFAULT));"
"462","16591.txt","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS)) {","if (topology_conf.containsKey(Config.TOPOLOGY_GROUPS) && topology_conf.get(Config.TOPOLOGY_GROUPS) != null) {","if (topology_conf.containsKey(Config.TOPOLOGY_USERS)) {"
"463","16593.txt","BeanDefinition definition, BeanDefinitionRegistry registry)","AbstractBeanDefinition definition, BeanDefinitionRegistry registry)","BeanDefinition definition, BeanDefinitionRegistry registry, boolean isInnerBean)"
"464","16598.txt","if (WSHelper.isJaxwsEjbDeployment(dep)) {","else if (WSHelper.isJaxwsEjbDeployment(dep)) {","if (WSHelper.isJseDeployment(dep)) {"
"465","16605.txt","if (this.accept(key)) {","if (key instanceof String) {","if (this.alwaysSerialize) {"
"466","16643.txt","return new CoarseSessionEntry<>(entry, value);","return (value != null) ? new CoarseSessionEntry<>(entry, value) : null;","return new CoarseSessionEntry<>(existingEntry, value);"
"467","16649.txt",".setInitialMode(ServiceController.Mode.PASSIVE)",".setInitialMode(initialMode)",".setInitialMode(initialMode)"
"468","16650.txt",".setInitialMode(ServiceController.Mode.PASSIVE)",".setInitialMode(initialMode)",".setInitialMode(ServiceController.Mode.ON_DEMAND)"
"469","16651.txt",".setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setElementValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, true, false))"
"470","16654.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true))"
"471","16658.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1))"
"472","16659.txt",".setValidator(new StringLengthValidator(1, true, true))",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true))"
"473","16660.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1, true, false))"
"474","16665.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true, false))"
"475","16677.txt","public static final AttachmentKey<AttachmentList<VirtualFile>> DEPLOYMENT_OVERRIDE_LOCATIONS = AttachmentKey.createList(VirtualFile.class);","public static final AttachmentKey<Map<String, MountedDeploymentOverlay>> DEPLOYMENT_OVERLAY_LOCATIONS = AttachmentKey.create(Map.class);","public static final AttachmentKey<AttachmentList<ServiceName>> BUNDLE_ACTIVE_DEPENDENCIES = AttachmentKey.createList(ServiceName.class);"
"476","16705.txt","public void testSurroundingSpacesAreDeleted() throws IOException {","public void testIgnoreSurroundingSpacesAreDeleted() throws IOException {","public void testSurroundingTabsAreDeleted() throws IOException {"
"477","16727.txt","SERVER_DEPLOYMENT_LOGGER.debugf(""Injection for a member with static modifier is only acceptable on application clients, ignoring injection for target %s"",injectionConfiguration.getTarget());","SERVER_DEPLOYMENT_LOGGER.ignoringStaticInjectionTarget(injectionConfiguration.getTarget());","final Map<InjectionTarget, ResourceInjectionConfiguration> mergedInjections = new HashMap<InjectionTarget, ResourceInjectionConfiguration>();"
"478","16737.txt","log.warnf(ofe, ""Operation (%s) failed - address: (%s)"", operation.get(OP), operation.get(OP_ADDR));","log.warnf(""Operation (%s) failed - address: (%s)"", operation.get(OP), operation.get(OP_ADDR));","log.errorf(t, ""Operation (%s) failed - address: (%s)"", operation.get(OP), operation.get(OP_ADDR));"
"479","16740.txt","throw MESSAGES.noContextToDelegateTo(operationId);;","throw new IllegalStateException(""no context to delegate with id: "" + operationId);","throw MESSAGES.nullAsynchronousExecutor();"
"480","16743.txt","RealMatrix getR();","RealMatrix getR() throws IllegalStateException;","RealMatrix getQ();"
"481","16744.txt","private final int referenceCount;","final int referenceCount;","private transient int count;"
"482","16745.txt","DeploymentUnitProcessingException sessionTypeNotSpecified(String bean);","IllegalStateException sessionTypeNotSpecified(String bean);","DeploymentUnitProcessingException couldNotFindSessionBean(String beanName);"
"483","16746.txt","reader.seek(position); // cannot be null here","reader.seek(position);","reader.seek(position);"
"484","16749.txt","return Boolean.valueOf(isEquals());","return isEquals();","return equalsBuilder.isEquals();"
"485","1675.txt","public boolean isIntercepted() {","private boolean isIntercepted() {","public void release() {"
"486","16759.txt","throws NotANumberException {","throws NotStrictlyPositiveException {","throw new NotANumberException();"
"487","16762.txt","assertTrue(processor.supportsReturnType(returnParamNonSimpleType));","assertFalse(processor.supportsReturnType(returnParamNonSimpleType));","assertTrue(processor.supportsReturnType(returnParamNamedModelAttr));"
"488","16769.txt","if (targetObject instanceof Map) {","if (targetObjectTypeDescriptor.isMap()) {","if (targetObject instanceof List) {"
"489","16774.txt","return new ServerSubsystemAdd(namespaceUri);","return null;","return new DomainSubsystemRemove(profileName, namespaceUri);"
"490","1678.txt","new LaguerreSolver(f2);","UnivariateRealSolver solver2 = new LaguerreSolver(f2);","expected = new Complex(0.0, 2.0);"
"491","16806.txt","byte FETCH_DOMAIN_CONFIGURATION_REQUEST = 0x57;","byte IS_ACTIVE_REQUEST = 0x57;","byte PARAM_ROOT_ID_CONFIGURATION = 0x27;"
"492","16807.txt","protected InjectedValue<ServletContainerService> getServletContainer() {","public InjectedValue<ServletContainerService> getServletContainer() {","protected InjectedValue<UndertowService> getUndertowService() {"
"493","1681.txt","if (theConsole.getConsole() == null && !howInteractive.equals(Interactiveness.SILENT)) {","if (theConsole.getConsole() == null) {","if (theConsole.getConsole() == null) {"
"494","16814.txt","if ((u == 0) || (v == 0)) {","if (u * v == 0) {","if ((n == k) || (k == 0)) {"
"495","16820.txt","if(taskId==-1) {","if(taskId==Constants.SYSTEM_TASK_ID) {","if(ret==null) {"
"496","16822.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"497","16825.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"498","16826.txt","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, APPLICATION_JSON + ""; charset="" + UTF_8);","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, TEXT_PLAIN + ""; charset="" + UTF_8);","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED+ ""; charset="" + UTF_8);"
"499","16835.txt","// @Test","@Test","@Test"
"500","16839.txt","attributeAccess.getWriteHandler().execute(context, operation);","attributeAccess.getReadHandler().execute(context, operation);","attributeAccess.getReadHandler().execute(context, operation);"
"501","1685.txt","public WebSocketHandler getDelegate() {","protected WebSocketHandler getDelegate() {","public WebSocketHandlerDecorator(WebSocketHandler delegate) {"
"502","16861.txt","final Calendar c = Calendar.getInstance();","Calendar c = Calendar.getInstance();","final Calendar cal = Calendar.getInstance();"
"503","16862.txt","final String pattern = ""yyyy-MM-dd'T'"";","String pattern = ""yyyy-MM-dd'T'"";","final String pattern = ""yyyy-MM-dd'T'HH:mm:ss.SSS Z"";"
"504","16941.txt","sockJsSession.handleSuccessiveRequest(request, response, getFrameFormat(request));","sockJsSession.startLongPollingRequest(request, response, getFrameFormat(request));","sockJsSession.handleInitialRequest(request, response, getFrameFormat(request));"
"505","16943.txt","super.startAsyncRequest();","super.startLongPollingRequest(request, response, frameFormat);","super.resetRequest();"
"506","1695.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"507","1696.txt","tmp = new File(this.serverDataDir, ""deployments"");","tmp = new File(this.serverBaseDir, ""deployments"");","tmp = new File(this.serverBaseDir, ""data"");"
"508","16972.txt","assertNotNull(""Line expected"", iterator.next());","assertTrue(""Line expected"", iterator.next() instanceof String);","assertNotNull(iterator.next());"
"509","16973.txt","protected void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","private void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","protected void parsePassivationStore(final XMLExtendedStreamReader reader, List<ModelNode> operations) throws XMLStreamException {"
"510","16976.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"511","17011.txt","static final DescriptionProvider SUBSYSTEM_PROVIDER = new DescriptionProvider() {","static final DescriptionProvider SUBSYSTEM = new DescriptionProvider() {","static final DescriptionProvider SUBSYSTEM_ADD_DESC = new DescriptionProvider() {"
"512","17012.txt","if (vector.length != dimensionSize.length) {","if (vector != null && vector.length != dimensionSize.length) {","if (subVector.length == dimensionSize.length) {"
"513","17022.txt","System.out.println(updates);","//System.out.println(combiner.createUpdates());","//System.out.println(hostModel);"
"514","17024.txt","writeAttribute(writer, Attribute.NAME, node.get(NAME));","writeAttribute(writer, Attribute.BLOCKING, node.get(NAME));","writeAttribute(writer, Attribute.NAME, node.get(name));"
"515","17039.txt","return true;","return context.isNormalServer();","return false;"
"516","17041.txt","String ls = cli.readAllUnformated(WAIT_LINETIMEOUT, WAIT_LINETIMEOUT);","String ls = cli.readAllUnformated(WAIT_TIMEOUT, WAIT_LINETIMEOUT);","String ls = cli.readAllUnformated(WAIT_TIMEOUT, WAIT_LINETIMEOUT);"
"517","17048.txt","static final String BATCHING = ""batching"";","@Deprecated static final String BATCHING = ""batching"";","static final String MACHINE = ""machine"";"
"518","17073.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"519","17083.txt","newControllers.add(InitialContextFactoryService.addService(target, verificationHandler));","InitialContextFactoryService.addService(target);","newControllers.add(addGlobalContextFactory(target, ""jboss"", verificationHandler));"
"520","17089.txt","if (nextSecurityDomain == null || nextSecurityDomain.isEmpty()) {","if(nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null) {"
"521","17090.txt","Assert.assertFalse(""key="" + key + ""\n with child1 undefined has child2 \n"" + child2.asString(), child2.isDefined());","Assert.assertFalse(child2.asString(), child2.isDefined());","Assert.assertTrue(""key="" + key + ""\n with child1 \n"" + child1.toString() + ""\n has child2 not defined\n node2 is:\n"" + node2.toString(), child2.isDefined());"
"522","17092.txt","if (responseType != null && !Void.class.equals(responseType)) {","if (responseType != null) {","if (responseType != null) {"
"523","17100.txt","report(MessageSeverity.WARN, ""Step handler "" + step.handler + "" failed after completion"");","// todo log a warning","report(MessageSeverity.INFO, ""Operation rolling back"");"
"524","17102.txt","IllegalStateException useOperationContextRemoveService();","String useOperationContextRemoveService();","IllegalStateException serviceRemovalRuntimeOperationsOnly();"
"525","17103.txt","logIntrospectionFailure(clazz, ex);","// We're probably hitting a non-present optional arrangement - let's back out.","logIntrospectionFailure(method, ex);"
"526","17104.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"527","17156.txt","for (AttributeDefinition attribute : BroadcastGroupDefinition.ATTRIBUTES) {","for (AttributeDefinition attribute : CommonAttributes.BROADCAST_GROUP_ATTRIBUTES) {","for (AttributeDefinition attribute : DiscoveryGroupDefinition.ATTRIBUTES) {"
"528","17159.txt","} else if(!(arg.startsWith(""-D"") || arg.equals(""-XX:""))) {// skip system properties and jvm options","} else {","} else if (arg.startsWith(""--properties="")) {"
"529","1716.txt","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, false, false, true, false));","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, false, false, false, false));","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, true, false, false, false));"
"530","17169.txt","@Message(id = 67, value = ""Could not find the port number listening for protocol %s"")","@Message(id = 67, value = ""Servlet class not defined for servlet %s"")","@Message(id = 63, value = ""Could not find the port number listening for protocol %s"")"
"531","17170.txt","return 100 * doubleValue();","return multiply(100).doubleValue();","return (int)doubleValue();"
"532","17178.txt","if (path.isEmpty()) {","if (path.length() == 0) {","if (lines.isEmpty()) {"
"533","17179.txt","if (extension == null || extension.isEmpty()) {","if (extension == null || extension.length() == 0) {","if (extensions == null || extensions.isEmpty()) {"
"534","1719.txt","return console.readLine(prompt, (char) 0x00);","return console.readLine(prompt, '*');","return console.readLine(prompt);"
"535","172.txt","final Resource root = context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS);","final Resource root = context.getRootResource();","final Resource resource = context.readResource(PathAddress.EMPTY_ADDRESS);"
"536","17226.txt","public void testLocales() {","public void testLocales() throws ParseException {","public void testLocaleMatches() {"
"537","17254.txt","public static final int POST_MODULE_EJB_TIMER_METADATA_MERGE = 0x0506;","public static final int POST_MODULE_EJB_DD_TIMEOUT_METHOD           = 0x0506;","public static final int POST_MODULE_EJB_PERMIT_ALL_ANNOTATION       = 0x0503;"
"538","1729.txt","context.stepCompleted();","context.completeStep(RollbackHandler.NOOP_ROLLBACK_HANDLER);","return context.getProcessType().isServer();"
"539","17305.txt","ResourceUtils.useCachesIfNecessary(jarCon);","jarCon.setUseCaches(jarCon.getClass().getName().startsWith(""JNLP""));","this.resources.add(new VfsResource(vfsResource));"
"540","17306.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"541","17326.txt","} else if (Configuration.PROVIDER_CLASS_DEFAULT.equals(pu.getPersistenceProviderClassName())){","} else if (pu.getPersistenceProviderClassName() == null || pu.getPersistenceProviderClassName().equals(Configuration.ADAPTER_MODULE_DEFAULT)){","} else if (providerModule.equals(Configuration.PROVIDER_MODULE_HIBERNATE3)) {"
"542","17339.txt","public void testIgnoreSurroundingSpacesAreDeleted() throws IOException {","public void testNextToken1() throws IOException {","public void testDelimiterIsWhitespace() throws IOException {"
"543","17349.txt","resultHandler.handleResultFragment(NO_LOCATION, result);","resultHandler.handleResultFragment(new String[0], result);","resultHandler.handleResultFragment(new String[0], result);"
"544","17350.txt","operation.get(DESCRIPTION).set(bundle.getString(""resource-adapter.add""));","operation.get(DESCRIPTION).set(bundle.getString(""resourceadapter.add""));","operation.get(DESCRIPTION).set(bundle.getString(""resource-adapters.add""));"
"545","17352.txt","doHandle(ctx);","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","ctx.leaveState();"
"546","1743.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","content.add(contentItemNode);"
"547","17434.txt","buf.append("": "").append(t1.getClass().getName());","t1.printStackTrace();","buf.append("": "").append(t1.getLocalizedMessage());"
"548","17435.txt","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, APPLICATION_JSON + ""; charset="" + UTF_8);","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, TEXT_PLAIN + ""; charset="" + UTF_8);","exchange.getResponseHeaders().put(Headers.CONTENT_TYPE, APPLICATION_DMR_ENCODED+ ""; charset="" + UTF_8);"
"549","17441.txt","MediaType textPlain = MediaType.TEXT_PLAIN;","MediaType textPlain = new MediaType(""text"", ""plain"");","MediaType all = MediaType.ALL;"
"550","17465.txt","log.debug(""SFSB instance with session ID "" + key + "" not available in cache"");","EjbLogger.ROOT_LOGGER.cacheEntryNotFound(key);","// This is a shared executor, so just cancel our tasks"
"551","17466.txt","log.debug(""SFSB instance with session ID "" + key + "" not available in cache"");","EjbLogger.ROOT_LOGGER.cacheEntryNotFound(key);","return new RemoveTask<K>(PassivatingBackingCacheImpl.this, id);"
"552","17469.txt","public static final BigInteger ONE_YB = ONE_KB_BI.multiply(ONE_ZB);","public static final BigInteger ONE_YB = ONE_ZB.multiply(BigInteger.valueOf(ONE_EB));","public static final BigInteger ONE_MB_BI = ONE_KB_BI.multiply(ONE_KB_BI);"
"553","1750.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","nameNode.set(productName);"
"554","17538.txt","assertEquals(1, ints.size());","assertEquals(1, (int) ints.size());","assertEquals(4, list.size());"
"555","17539.txt","return new String[] { ""1"", ""3"", ""5"", ""7"", ""2"", ""4"", ""6"" };","return (String[]) new String[] { ""1"", ""3"", ""5"", ""7"", ""2"", ""4"", ""6"" };","return new String[] {""9"", ""88"", ""678"", ""87"", ""98"", ""78"", ""99""};"
"556","1754.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(status.toString());"
"557","17545.txt","final EnumSet<Attribute> required = EnumSet.of(Attribute.NAME);","final EnumSet<Attribute> required = EnumSet.of(Attribute.FILE_NAME, Attribute.NAME);","final EnumSet<Attribute> required = EnumSet.of(Attribute.PATH);"
"558","17549.txt","return readField(field, target, false);","return readField(field, target);","return readField(field, target);"
"559","17554.txt","return new DomainControllerImpl(scheduledExecutorService.getValue(), domainModel, localHostName, localFileRepository, deploymentRepository);","return new DomainControllerImpl(scheduledExecutorService.getValue(), domainModel, localHostName, localFileRepository);","return new DomainControllerImpl(scheduledExecutorService.getValue(), domainModel, localHostName, localFileRepository, masterClient);"
"560","17555.txt","public static void expectHeader(final byte actual, int expected) throws IOException {","private static void expectHeader(final byte actual, int expected) throws IOException {","public static void expectHeader(final DataInput input, int expected) throws IOException {"
"561","1756.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(status.toString());"
"562","17562.txt","ctx.printColumns(Util.getDeployments(client));","ctx.printLine(""The argument is missing."");","ctx.printLine(""Undeploy failed: "" + Util.getFailureDescription(result));"
"563","17580.txt","org.jboss.as.host.controller.SystemExiter.initialize(new ServerManagerNoopExiter());","org.jboss.as.server.manager.SystemExiter.initialize(new ServerManagerNoopExiter());","org.jboss.as.server.SystemExiter.initialize(new ServerNoopExiter());"
"564","17586.txt","y = problem.y.clone();","y = (double[]) problem.y.clone();","a = problem.a;"
"565","17604.txt","catch (TransportErrorException ex) {","catch (SockJsRuntimeException ex) {","catch (IOException ex) {"
"566","17628.txt","tmp = new File(this.domainBaseDir, ""content"");","tmp = new File(this.domainBaseDir, ""deployments"");","tmp = new File(this.domainBaseDir, ""log"");"
"567","17633.txt","throw new UnsupportedOperationException(""not implemented yet"");","return null;","outBuffer.append(""Value \t Frequency \n"");"
"568","17636.txt","return this.service.getClassLoader();","return service.getMessageListenerInterface().getClassLoader();","return delegate.hashCode();"
"569","17638.txt","}, OperationContext.Stage.MODEL, true);","}, OperationContext.Stage.IMMEDIATE);","}, OperationContext.Stage.RUNTIME);"
"570","17639.txt","// Ignore IOException here (client disconnect)","log.errorf(""Caught Exception: %s"", e.getLocalizedMessage());","principal = context.getRealm().authenticate(username, password);"
"571","17645.txt","}","};","};"
"572","17646.txt","}","};","};"
"573","17651.txt","return isBeanManagedTransaction() ? StatefulAllowedMethodsInformation.INSTANCE_BMT : StatefulAllowedMethodsInformation.INSTANCE_CMT;","return StatefulAllowedMethodsInformation.INSTANCE;","return null;"
"574","17684.txt","return doGet(attributeName, Class.class);","return (Class<T>)doGet(attributeName, Class.class);","return doGet(attributeName, Class[].class);"
"575","17706.txt","throw PatchMessages.MESSAGES.patchNotFoundInHistory(cumulativePatchID);","throw new PatchingException(""failed to find patch history entry for "" + cumulativePatchID);","throw PatchMessages.MESSAGES.cannotRollbackPatch(patchId);"
"576","17711.txt","final EnumSet<Attribute> required = EnumSet.of(Attribute.CATEGORY);","final EnumSet<Attribute> required = EnumSet.of(Attribute.NAME);","final EnumSet<Attribute> required = EnumSet.of(Attribute.PATTERN);"
"577","17728.txt","IllegalStateException viewNotFound(String viewClass, String ejbName);","RuntimeException viewNotFound(String viewClass, String ejbName);","IllegalStateException endpointUnAvailable(String componentName);"
"578","17746.txt","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","final int attCount = reader.getAttributeCount();"
"579","17762.txt","v *= v;","v = v * v;","ej *= v;"
"580","17767.txt","iter++;","iter = iter + 1;","iter = 0;"
"581","17770.txt","k += m;","k = k + m;","k = -m;"
"582","17777.txt","rhs[m] /= X;","rhs[m] = rhs[m] / X;","rhs[mp1] = X;"
"583","17791.txt","testSizeRotatingFileHandler(kernelServices, PROFILE);","testPeriodicRotatingFileHandler(kernelServices, PROFILE);","testSizeRotatingFileHandler(kernelServices, null);"
"584","17798.txt","jar.addClasses(SimpleStatelessWebserviceEndpointIface.class, SimpleStatelessWebserviceEndpointImpl.class);","jar.addPackage(SimpleStatelessWebserviceEndpointImpl.class.getPackage());","final SimpleStatelessWebserviceEndpointIface port = service.getPort(SimpleStatelessWebserviceEndpointIface.class);"
"585","17807.txt","throw ThreadsMessages.MESSAGES.unsupportedBoundedQueueThreadPoolMetric(attributeName);","throw new IllegalStateException(""Unsupported attribute '"" + attributeName + ""'"");","BoundedQueueThreadPoolService bounded = (BoundedQueueThreadPoolService) service;"
"586","17809.txt",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, false, true)).setAllowExpression(true).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build();",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, false, true)).setAllowExpression(true).build();",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, false, true)).setAllowExpression(true).build();"
"587","1781.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"588","17810.txt","throw ThreadsMessages.MESSAGES.unsupportedQueuelessThreadPoolMetric(attributeName);","throw new IllegalStateException(""Unsupported attribute '"" + attributeName + ""'"");","final QueuelessThreadPoolService pool = (QueuelessThreadPoolService) service;"
"589","17811.txt","throw ThreadsMessages.MESSAGES.unsupportedScheduledThreadPoolMetric(attributeName);","throw new IllegalStateException(""Unsupported attribute '"" + attributeName + ""'"");","final ScheduledThreadPoolService pool = (ScheduledThreadPoolService) service;"
"590","17814.txt","throw ThreadsMessages.MESSAGES.unsupportedUnboundedQueueThreadPoolMetric(attributeName);","throw new IllegalStateException(""Unsupported attribute '"" + attributeName + ""'"");","final UnboundedQueueThreadPoolService pool = (UnboundedQueueThreadPoolService) service;"
"591","17839.txt","public synchronized int getWindowSize() {","public int getWindowSize() {","public synchronized void setWindowSize(int windowSize) {"
"592","17846.txt","private void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","protected void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","private void parseDataStores(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {"
"593","17854.txt","if(status!=null && tx.equals(status.attempt)) {","if(tx.equals(status.attempt)) {","if(stored!=null && tx.equals(stored.attempt)) {"
"594","17855.txt","m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE).asString());","m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_FILE));","m.invoke(connector.getProtocolHandler(), ssl.get(Constants.CERTIFICATE_KEY_FILE).asString());"
"595","17860.txt","Object itemsObject = evaluate(""items"", items);","Object itemsObject = (items instanceof String ? evaluate(""items"", (String) items) : items);","Object items = getItems();"
"596","1791.txt","return this.name;","return this.getName();","return this.nickNames;"
"597","17919.txt","s     *","*","|| value >= (1l << (3 * (length - 1))))) {"
"598","17938.txt","} catch (ClassCastException ex) { // NOPMD","} catch (ClassCastException ex) {","} catch (ClassCastException ex) {"
"599","17963.txt","if (editor == null && convertedValue == newValue) {","if (editor == null) {","if (editor != null && !(convertedValue instanceof String)) {"
"600","17969.txt","public static final int REMOTE_EXCEPTION_TRANSFORMER                            = 0x100;","public static final int NO_SUCH_OBJECT_TRANSFORMER                              = 0x100;","public static final int SESSION_REMOVE_INTERCEPTOR                              = 0x700;"
"601","180.txt","return super.clone();","return (ZipLong) super.clone();","return result;"
"602","18006.txt","message = sfsb.queryCacheCheckIfEmpty(id);","message = sfsb.queryCacheCheck(id);","message = sfsb.queryCacheCheck(id);"
"603","18011.txt","in.close();","super.close();","closeEntry();"
"604","18012.txt","out.close();","super.close();","out.write(b);"
"605","1802.txt","static final byte[] DD_SIG = ZipLong.DD_SIG.getBytes();","static final byte[] DD_SIG = ZipLong.getBytes(0X08074B50L);","static final byte[] CFH_SIG = ZipLong.CFH_SIG.getBytes();"
"606","18060.txt","void deflate() throws IOException {","private void deflate() throws IOException {","void flushDeflater() throws IOException {"
"607","18095.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"608","18096.txt","StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.SEND);","StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.MESSAGE);","StompHeaderAccessor headers = StompHeaderAccessor.create(StompCommand.DISCONNECT);"
"609","181.txt","return super.clone();","return (ZipShort) super.clone();","return result;"
"610","18131.txt","exceptionResolver.resolveException(request, response, null, ex);","ModelAndView mav = exceptionResolver.resolveException(request, response, null, ex);","exceptionResolver = new ResponseStatusExceptionResolver();"
"611","1814.txt","return (value != null) ? new CoarseSessionEntry<>(entry, value) : null;","return new CoarseSessionEntry<>(entry, value);","return new CoarseSessionEntry<>(entry, (existingValue != null) ? existingValue : value);"
"612","18147.txt","double[][] boundaries = boundaries(DIM,-0.5,0.5);","double[][] boundaries = boundaries(DIM,-1,2);","double[][] boundaries = boundaries(DIM,-1,2);"
"613","18158.txt","public T peek() {","public T get() {","public T pop() {"
"614","18160.txt","if (o != null && this.marshaller.supports(o.getClass())) {","if (this.marshaller.supports(o.getClass())) {","if (!this.marshaller.supports(o.getClass())) {"
"615","18170.txt","writer.writeStartElement(element.getLocalName());","writer.writeStartElement(Element.HANDLERS.getLocalName());","writer.writeStartElement(Element.APPEND.getLocalName());"
"616","18182.txt","@Bean @Lazy","@Bean","@Bean"
"617","18195.txt","this.writeNoSuchEJBMethodFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName, methodName, methodParamTypes);","// TODO: Write out NoSuchMethod invocation failure to channel outstream","this.writeNoSuchEJBFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName);"
"618","182.txt","writeField(field, target, value, false);","writeField(field, target, value);","writeField(field, target, value);"
"619","18201.txt","marshaller.writeByte(DomainClientProtocol.RETURN_HOST_NAME);","marshaller.writeByte(DomainClientProtocol.PARAM_HOST_NAME);","marshaller.writeByte(DomainClientProtocol.RETURN_HOST_MODEL);"
"620","18253.txt","public int getCode() {","int getCode() {","public String getErrorMessage() {"
"621","18254.txt","private static final String BASIC_URL = ""http://localhost:9990/management/"";","private static final String BASIC_URL = ""http://localhost:9990/domain-api/"";","private static final String CRLF = ""\r\n"";"
"622","18257.txt","private final PropertiesElement systemProperties = new PropertiesElement(Element.PROPERTY, true);","private PropertiesElement systemProperties;","private final NavigableMap<String, ServerElement> servers = new TreeMap<String, ServerElement>();"
"623","18269.txt","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","doHandle(ctx);","ctx.enterState(EscapeCharacterState.INSTANCE);"
"624","18307.txt","""]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler"");","""]: Does your handler implement a supported interface like Controller?"");","this.handlerAdapters = getDefaultStrategies(context, HandlerAdapter.class);"
"625","18322.txt","operation.get(REQUEST_PROPERTIES, DRIVER_NAME.getName(), REQUIRED).set(false);","operation.get(REQUEST_PROPERTIES, DRIVER_NAME.getName(), REQUIRED).set(true);","operation.get(REQUEST_PROPERTIES, DRIVER_CLASS_NAME.getName(), REQUIRED).set(false);"
"626","18344.txt","return this.messagingMessageConverter.toMessage(result, session);","return messagingMessageConverter.toMessage(result, session);","return this.messagingMessageConverter;"
"627","18352.txt","if (context.getProcessType().isServer()) {","if (context.getType() == OperationContext.Type.SERVER) {","if (!metric.get(""type"").isDefined()) {"
"628","18395.txt","public void setPet(Pet pet) {","protected void setPet(Pet pet) {","public void setDate(Date date) {"
"629","18423.txt","long nextHeaderCrc;","int nextHeaderCrc;","long nextHeaderSize;"
"630","18454.txt","server.reconnectServerProcess();","server.reconnectServerProcess(environment.getHostControllerPort());","server.removeServerProcess();"
"631","18483.txt","@Message(id = 67, value = ""Servlet class not defined for servlet %s"")","@Message(id = 67, value = ""Could not find the port number listening for protocol %s"")","@Message(id = 36, value = ""@ServletSecurity is only allowed at class level %s"")"
"632","18487.txt","MapUtils.predicatedMap(null, p, p);","map = MapUtils.predicatedMap(null, p, p);","MapUtils.iterableMap(null);"
"633","18551.txt","assertEquals(expected[i], observed[i], tolerance);","Assert.assertEquals(expected[i], observed[i], tolerance);","assertEquals(expected, actual, 0);"
"634","18552.txt","if (modelNode.hasDefined(NAME)) {","if (hasDefinedChild(modelNode, NAME)) {","if (modelNode.hasDefined(JVM)) {"
"635","18556.txt","unregister();","channelClient.close();","connect();"
"636","18557.txt","optimizer.setMaxEvaluations(200);","optimizer.setMaxEvaluations(100);","optimizer.setMaxEvaluations(100);"
"637","18588.txt","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"638","18590.txt","container.get(ModelKeys.START).set(value);","container.get(ModelKeys.START).set(Boolean.parseBoolean(value));","container.get(ModelKeys.LISTENER_EXECUTOR).set(value);"
"639","18602.txt",".setAllowNull(true)","//                    .setAllowNull(true)",".setAllowExpression(true)"
"640","18610.txt","urlStr = htmlEscape(urlStr);","urlStr = isHtmlEscape() ? HtmlUtils.htmlEscape(urlStr) : urlStr;","urlStr = response.encodeURL(urlStr);"
"641","18614.txt","assertFalse(solver.isNonSingular());","assertTrue(solver.isNonSingular());","assertTrue(solver.isNonSingular());"
"642","18622.txt","domainDeployment = context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS.append(deploymentPath));","domainDeployment = context.getRootResource().requireChild(deploymentPath);","deploymentResource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS.append(deploymentPath));"
"643","1875.txt","if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath() + File.pathSeparator)) {","if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath())) {","if (destDir.getCanonicalPath().startsWith(srcDir.getCanonicalPath())) {"
"644","1884.txt","this.webSocketHandler.setDefaultProtocolHandler(this.defaultHandler);","this.webSocketHandler.setDefaultProtocolHandler(defaultHandler);","this.webSocketHandler.setDefaultProtocolHandler(defaultHandler);"
"645","189.txt","SegmentsAndVirtualNodeConverter.virtualNodesToSegments(value), cache, reader);","InfinispanResourceAndOperationTransformer_1_3.virtualNodesToSegments(value), cache, reader);","DistributedCacheResource.OWNERS.parseAndSetParameter(value, cache, reader);"
"646","1894.txt","break;","// not reached","return;"
"647","1905.txt","public static synchronized List availableLocaleList() {","public static List availableLocaleList() {","public static synchronized Set availableLocaleSet() {"
"648","1912.txt","if (!containsBeanDefinition(beanName) || getBeanDefinition(beanName).isAutowireCandidate()) {","if (getBeanDefinition(beanName).isAutowireCandidate()) {","if (!containsBeanDefinition(beanName)) {"
"649","192.txt","dataSources.registerReadOnlyAttribute(attribute.getName(), XMLDataSourceRuntimeHandler.INSTANCE, Storage.RUNTIME);","dataSources.registerReadOnlyAttribute(attribute.getName(), null, Storage.RUNTIME);","dataSources.registerReadOnlyAttribute(attribute.getName(), PoolConfigurationReadHandler.INSTANCE, Storage.RUNTIME);"
"650","1924.txt","c = ' ';","continue;","char c = content[i];"
"651","1939.txt","String urlString = System.getProperty(""jmx.service.url"", ""service:jmx:rmi:///jndi/rmi://"" + NetworkUtils.formatPossibleIpv6Address(host) + "":"" + port + ""/jmxrmi"");","String urlString = System.getProperty(""jmx.service.url"", ""service:jmx:rmi:///jndi/rmi://"" + ProtocolUtils.formatPossibleIpv6Address(host) + "":"" + port + ""/jmxrmi"");","throw new IllegalStateException(""Cannot obtain MBeanServerConnection to: "" + urlString, ex);"
"652","1949.txt","String server = oneUp.getLastElement().getValue();","String server = twoUp.getLastElement().getValue();","String server = twoUp.getLastElement().getValue();"
"653","1960.txt","private void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","protected void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","private void parseDataStores(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {"
"654","1961.txt","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, false, false, true, false));","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, false, false, false, false));","moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader, moduleIdentifier, true, false, false, false));"
"655","1986.txt","if (context.getProcessType().isServer()) {","if(context.getType() == OperationContext.Type.SERVER) {","if (isCacheStoreDefined(context, operation)) {"
"656","1991.txt","tree(env.getInstalledImage().getJbossHome());","tree(result.getPatchInfo().getEnvironment().getInstalledImage().getJbossHome());","createModule(env.getInstalledImage().getJbossHome(), moduleName);"
"657","2009.txt","throw EjbMessages.MESSAGES.couldNotFindEjb(String.valueOf(key));","throw new NoSuchEJBException(String.valueOf(key));","throw EjbMessages.MESSAGES.cacheEntryInUse(entry);"
"658","2010.txt","throw EjbMessages.MESSAGES.messageInputStreamCannotBeNull();","throw new IllegalArgumentException(""Cannot read from null message inputstream"");","throw EjbMessages.MESSAGES.failedToOpenMessageOutputStream(e);"
"659","2011.txt","throw EjbMessages.MESSAGES.couldNotCloseChannel(e);","throw new RuntimeException(e);","throw EjbMessages.MESSAGES.failedToOpenMessageOutputStream(e);"
"660","2012.txt","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"661","2021.txt","builder.addDependency(ChannelFactoryService.getServiceName(stack), ChannelFactory.class, transportConfig.getChannelFactoryInjector());","builder.addDependency((stack != null) ? ChannelFactoryService.getServiceName(stack) : ChannelFactoryService.getServiceName(), ChannelFactory.class, transportConfig.getChannelFactoryInjector());","builder.addDependency(AbstractPathService.pathNameOf(relativeTo), String.class, storeConfig.getRelativeToInjector());"
"662","2026.txt","throw new UnsupportedOperationException();","return new MockExpressionEvaluator(this);","throw new UnsupportedOperationException(""forward"");"
"663","2031.txt","return true;","return context.getType() == OperationContext.Type.SERVER || context.getType() == OperationContext.Type.HOST;","return ManagementDescription.getAddManagementOutboundConnectionDescription(locale);"
"664","2032.txt","return true;","return context.getType() == OperationContext.Type.SERVER || context.getType() == OperationContext.Type.HOST;","return false;"
"665","2035.txt","final int max = (j > Integer.MAX_VALUE - threshold) ? n : Math.min(n, j + threshold);","final int max = Math.min(n, j + threshold);","final int max = str.length() - len;"
"666","2044.txt","final double[] vectorData;","double[] vectorData = null;","final double[] outData = new double[dim];"
"667","2053.txt","// no tests for now.","assertEquals(urlCodec.getEncoding(), urlCodec.getDefaultCharset());","String test = null;"
"668","206.txt","if (str.isEmpty() || deepEmpty(set)) {","if (str.length() == 0 || deepEmpty(set)) {","if (StringUtils.isEmpty(str) || deepEmpty(set)) {"
"669","208.txt","public void reset() throws IOException {","public synchronized void reset() throws IOException {","public void close() throws IOException {"
"670","2096.txt","for (AttributeDefinition attribute : DiscoveryGroupDefinition.ATTRIBUTES) {","for (AttributeDefinition attribute : CommonAttributes.DISCOVERY_GROUP_ATTRIBUTES) {","for (AttributeDefinition attribute : CommonAttributes.DIVERT_ATTRIBUTES) {"
"671","2103.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"672","2203.txt","str.getChars(0, width, buffer, size);","str.getChars(0, strLen, buffer, size);","str.getChars(0, strLen, buffer, index);"
"673","2216.txt","return ThreadsSubsystemElement.class;","return null;","return element;"
"674","2223.txt","final double[] yTmp    = y0.clone();","final double[] yTmp    = new double[y0.length];","final double[] y       = y0.clone();"
"675","2232.txt","SimplexOptimizer optimizer = new SimplexOptimizer(1e-14, 1e-14);","SimplexOptimizer optimizer = new SimplexOptimizer();","SimplexOptimizer optimizer = new SimplexOptimizer(1e-11, 1e-30);"
"676","2236.txt","super(configurationPersister, null);","super(configurationPersister);","super(configurationPersister);"
"677","2253.txt","@Bean @Lazy","@Bean","@Bean"
"678","2265.txt",".addVersionHash(""/**"");",".setResourceResolvers(new FingerprintResourceResolver(), new PathResourceResolver());","this.request.setContextPath(""/myapp"");"
"679","228.txt","public Resource getRootResource() {","Resource getRootResource() {","public Resource clone() {"
"680","23.txt","protected void shutdown() {","void shutdown() {","protected void start() {"
"681","2350.txt","class LegacySupport {","public class LegacySupport {","private LegacySupport() {"
"682","236.txt","return (value != null) ? new CoarseSessionEntry<>(entry, value) : null;","return new CoarseSessionEntry<>(entry, value);","return new CoarseSessionEntry<>(entry, (existingValue != null) ? existingValue : value);"
"683","2443.txt","this(operationName, descriptionResolver, descriptionResolver, null, null, deprecationData, null, parameters);","this(operationName, descriptionResolver, null, null, parameters);","this(operationName, descriptionResolver, descriptionResolver, replyType, replyValueType, deprecationData, null, parameters);"
"684","2447.txt","address.toNode(Util.PROFILE, profileName);","address.toNode(""profile"", profileName);","address.add(Util.PROFILE, profileName);"
"685","2467.txt","result += ctx.wasCancelCalled() ? ""true"" : ""false"";","result = ctx.wasCancelCalled() ? ""true"" : ""false"";","result = ctx.wasCancelCalled() ? ""true"" : ""false"";"
"686","249.txt","List<ResourceRoot> resourceRoots = deploymentUnit.getAttachmentList(Attachments.RESOURCE_ROOTS);","List<ResourceRoot> resourceRoots = deploymentUnit.getAttachment(Attachments.RESOURCE_ROOTS);","List<ResourceRoot> resourceRoots = deploymentUnit.getAttachment(Attachments.RESOURCE_ROOTS);"
"687","251.txt","if (editor == null && this.formattingService != null) {","if (editor == null) {","if (editor == null) {"
"688","2613.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"689","2641.txt","t1.printStackTrace();","buf.append("": "").append(t1.getClass().getName());","t.printStackTrace();"
"690","266.txt","node.get(CHILDREN, CommonAttributes.BINDINGS_DIRECTORY, MODEL_DESCRIPTION);","node.get(CHILDREN, CommonAttributes.BINDINGS_DIRECTORY, DESCRIPTION).set(bundle.getString(""bindings.directory""));","node.get(CHILDREN, CommonAttributes.BINDINGS_DIRECTORY, MIN_OCCURS).set(0);"
"691","2720.txt","assertEquals(302, response.getStatus());","assertEquals(200, response.getStatus());","assertEquals(200, response.getStatus());"
"692","2721.txt","double t = Math.abs(homoscedasticT(m1, m2, v1, v2, n1, n2));","double t = Math.abs(t(m1, m2, v1, v2, n1, n2));","double t = Math.abs(t(m1, m2, v1, v2, n1, n2));"
"693","2743.txt","@Test","@Ignore@Test","@SuppressWarnings(""unused"")"
"694","2751.txt","throw new AccessException(""Cannot read property of null target"");","return null;","throw new AccessException(""Cannot write property on null target"");"
"695","2755.txt","return Collections.singletonMap(allServers, serverOp);","return Collections.singletonMap(allServers, operation);","return Collections.singletonMap(allServers, operation);"
"696","2756.txt","if (executorToCheck != null && executorToCheck.get() instanceof ReflectiveMethodExecutor) {","if (executorToCheck.get() instanceof ReflectiveMethodExecutor) {","if (executorToCheck == null || !(executorToCheck.get() instanceof ReflectiveMethodExecutor)) {"
"697","2786.txt","final String bindingName = bindingConfiguration.getName().startsWith(""java:comp"") ? bindingConfiguration.getName() : ""java:comp/env/"" + bindingConfiguration.getName();","final String bindingName = bindingConfiguration.getName();","final String bindingName = bindingConfiguration.getName();"
"698","2805.txt","if (Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key()))) {","if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {","if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {"
"699","297.txt","import static test.util.TestResourceUtils.*;","import static org.springframework.tests.TestResourceUtils.qualifiedResource;","import static org.junit.Assert.*;"
"700","2988.txt","String invalidLocaleString(String unparsed);","OperationFailedException invalidLocaleString(String unparsed);","String invalid(String name);"
"701","3005.txt","ServiceController<?> controller = context.getServiceRegistry(false).getService(Services.FRAMEWORK_CREATE);","ServiceController<?> controller = context.getServiceRegistry(false).getService(Services.SYSTEM_CONTEXT);","ServiceController<?> controller = context.getServiceRegistry(false).getService(Services.START_LEVEL);"
"702","3018.txt","n, 2, 5);","new Object[] { n, 2, 5 });","relativeAccuracy * (Math.abs(oldt) + Math.abs(t)) * 0.5);"
"703","3070.txt","Resource root;","final Resource root;","Resource model = root;"
"704","3071.txt","super(null, null, null, null, null, null, null);","super(null, null, null, null, null, null);","super(null, null, null, null, null, null, null, null);"
"705","3072.txt","super(null, null, null, null, null, null, null);","super(null, null, null, null, null, null);","super(null, null, null, null, null, null, null, null);"
"706","3076.txt","throw new OperationFailedException(new ModelNode().set(""Jndi view is only available in runtime mode.""));","resultNode.set(""Jndi view is only available in runtime mode."");","throw new OperationFailedException(e, new ModelNode().set(""Failed to read java:global context entries.""));"
"707","3077.txt","// ignore exception",";","throw exception;"
"708","3080.txt","return this.id.hashCode();","return this.id.hashCode() ^ this.attribute.hashCode();","return this.id;"
"709","3150.txt","reply.get(TYPE).set(replyType == null ? ModelType.OBJECT : replyType);","reply.get(TYPE).set(ModelType.OBJECT);","reply.get(TYPE).set(replyType);"
"710","3161.txt","public synchronized double compute(MathArrays.Function f) {","public double compute(MathArrays.Function f) {","public synchronized double getElement(int index) {"
"711","3172.txt","return this.container.defineConfiguration(this.getCacheName(cacheName), configurationOverride);","return this.defineConfiguration(cacheName, this.defaultCache, configurationOverride);","return this.container.defineConfiguration(this.getCacheName(cacheName), this.getCacheName(templateCacheName), configurationOverride);"
"712","3173.txt","if(tuple.isTick()) {","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(ct.equals(CoordType.single())) {"
"713","3179.txt","throw new IOException(""This archives contains unclosed entries."");","closeArchiveEntry();","throw new IOException(""Stream closed"");"
"714","3181.txt","throw new CliInitializationException(e);","e.printStackTrace();","String[] newList = new String[list.size()];"
"715","3184.txt","uu = new UnicodeUnescaper(UnicodeUnescaper.PARAM.escapePlus);","uu.setEscapingPlus(true);","UnicodeUnescaper uu = new UnicodeUnescaper();"
"716","3229.txt","JGROUPS_CLUSTER(""jgroups-cluster""),","JGROUPS_CHANNEL(""jgroups-channel""),","JGROUPS_STACK(""jgroups-stack""),"
"717","3232.txt","PathElement.pathElement(""connection-definitions"", ""*"")));","PathElement.pathElement(""connection-definitions"", ""*""))).skipReverseControllerCheck();","PathElement.pathElement(""connection-definitions"", ""*""))).skipReverseControllerCheck();"
"718","3241.txt","assertEquals(""Unexpected events "" + publisher.events, 3, publisher.events.size());","assertEquals(3, publisher.events.size());","assertEquals(SessionConnectedEvent.class, publisher.events.get(1).getClass());"
"719","3286.txt",".addResolver(new VersionResourceResolver().addContentVersionStrategy(""/**""));",".addContentVersionStrategy(""/**"");",".addResourceLocations(""classpath:org/springframework/web/servlet/resource/test/"")"
"720","3296.txt","assertEquals(2, r.skip(2));","r.skip(2);","assertEquals(1, r.skip(1));"
"721","33.txt","throw ManagedDMRContentMessages.MESSAGES.nullParent();","throw new IllegalStateException(""null parent"");","throw MESSAGES.immutableResource();"
"722","3302.txt","final String line = ""s"";","final String line = ""/subsystem=datasources/data-source=java\\:jboss\\/datasources\\/ExampleDS"";","//final String line = ""cmd --p1=v1 --p2=v2 --p3 v3"";"
"723","3305.txt","return StringUtils.newStringUtf8(encodeBase64(binaryData, false));","return StringUtils.newStringUtf8(encodeBase64(binaryData, true));","return StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));"
"724","3313.txt","assertTrue(AnnotationUtils.equals(null, null));","assertFalse(AnnotationUtils.equals(field1.getAnnotation(TestAnnotation.class), null));","assertTrue(AnnotationUtils.equals(generated, real));"
"725","3332.txt","protected void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","private void parseDatabaseDataStore(final XMLExtendedStreamReader reader, final List<ModelNode> operations) throws XMLStreamException {","protected void parsePassivationStore(final XMLExtendedStreamReader reader, List<ModelNode> operations) throws XMLStreamException {"
"726","3335.txt","HashMap<?, ?> test = SerializationUtils.clone(iMap);","Object test = SerializationUtils.clone(iMap);","HashMap<?, ?> testMap = (HashMap<?, ?>) test;"
"727","3336.txt","assert isControllingThread();","assert Thread.currentThread() == initiatingThread;","restartRequired();"
"728","3337.txt","private final boolean ignoreEmptyHeaders;","private boolean ignoreEmptyHeaders;","private final boolean ignoreEmptyLines;"
"729","3338.txt","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","zkStr,"
"730","335.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"731","3353.txt","CLIWrapper cw = new CLIWrapper(false, new String[] {""--version""});","CLIWrapper cw = new CLIWrapper(true, new String[] {""--version""});","CLIWrapper cw = new CLIWrapper(false, new String[] {""--command=version""});"
"732","3366.txt","log.errorf(e, ""Error unregistering from master"");","throw new RuntimeException(e);","log.debug(""Attempting reconnection to master..."");"
"733","3377.txt","final DataElement orderType;","protected final DataElement orderType;","private final DataElement orderType;"
"734","3379.txt","_committedTo = KafkaUtils.getOffset(_consumer, spoutConfig.topic, id.partition,  kafka.api.OffsetRequest.LatestTime());","_committedTo = KafkaUtils.getOffset(_consumer, spoutConfig.topic, id.partition, -1);","_committedTo = KafkaUtils.getOffset(_consumer, spoutConfig.topic, id.partition, spoutConfig.startOffsetTime);"
"735","3405.txt","this.q0 = scalar;","this.q0 = 0;","this.q0 = a;"
"736","3432.txt","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(tuple.isTick()) {","if(ct.equals(CoordType.single())) {"
"737","350.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"738","3529.txt","accessor.getShortLogMessage(message.getPayload()));","accessor.getShortLogMessage((byte[]) message.getPayload()));","accessor.getShortLogMessage(message.getPayload()), ex);"
"739","3534.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());"
"740","3540.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"741","3542.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"742","3548.txt","d.addWelcomePages(file);","d.addWelcomePages(welcomeFiles);","d.addWelcomePages(file.substring(1));"
"743","3555.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"744","3561.txt","tmp = serverTempDir;","tmp = new File(serverBaseDir, ""tmp"");","serverTempDir = tmp;"
"745","3569.txt","continue; // ignore ch","// ignore ch","continue;"
"746","3639.txt","this.previousRun = builder.previousRun;","this.previousRun = null;","this.previousRun = previousRun;"
"747","3653.txt","descriptor.getRootDeclaringClass().getName()));","clazz.getName()));","declaringClass.getName()));"
"748","3657.txt","public static final AttachmentKey<Map<String, MountedDeploymentOverlay>> DEPLOYMENT_OVERLAY_LOCATIONS = AttachmentKey.create(Map.class);","public static final AttachmentKey<AttachmentList<VirtualFile>> DEPLOYMENT_OVERRIDE_LOCATIONS = AttachmentKey.createList(VirtualFile.class);","public static final AttachmentKey<Map<ModuleIdentifier, CompositeIndex>> ADDITIONAL_ANNOTATION_INDEXES_BY_MODULE = AttachmentKey.create(Map.class);"
"749","3661.txt","result = parsedCmd.getLastChunkIndex();","result = parsedCmd.getLastChunkIndex();//.getLastSeparatorIndex() + 1;","result = cursor + firstCharIndex;"
"750","3679.txt",".setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setElementValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, true, false))"
"751","3682.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true))"
"752","3687.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1))"
"753","3688.txt",".setValidator(new StringLengthValidator(1, true, true))",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true))"
"754","3689.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1, true, false))"
"755","3699.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true, false))"
"756","3707.txt","public static final int PARSE_INTERCEPTORS_ANNOTATION               = 0x3100;","public static final int PARSE_BEAN_INTERCEPTOR_ANNOTATION           = 0x3100;","public static final int PARSE_PERSISTENCE_ANNOTATION                = 0x3000;"
"757","3708.txt","@Message(id = Message.NONE, value = ""Password of the user, this will be checked against the password requirements defined within the add-user.properties configuration"")","@Message(id = Message.NONE, value = ""Password of the user. Should not be same as the username"")","@Message(id = Message.NONE, value = ""Password requirements are listed below. To modify these restrictions edit the add-user.properties configuration file."")"
"758","3722.txt","assertFalse(""Exclude unlisted still defaults to false in 2.0."", noExclude.excludeUnlistedClasses());","assertTrue(""Exclude unlisted should default true in 2.0."", noExclude.excludeUnlistedClasses());","assertFalse(""Exclude unlisted should default false in 1.0."", noExclude.excludeUnlistedClasses());"
"759","3728.txt","Method m2 = getNameMethod;","// Method m2 = getNameMethod;","Method m = getNameMethod;"
"760","3794.txt","import static test.util.TestResourceUtils.*;","import static org.springframework.tests.TestResourceUtils.qualifiedResource;","import static org.junit.Assert.*;"
"761","3832.txt","deploymentAdd.get(ENABLED).set(enabled);","if(startInput != null) deploymentAdd.get(ENABLED).set(startInput);","deploymentAdd.get(HASH).set(hash);"
"762","3862.txt","pathHandler.addPath(""/"", rootConsoleRedirectHandler);","pathHandler.setDefaultHandler(rootConsoleRedirectHandler);","pathHandler.addPath(consoleHandler.getContext(), readinessHandler);"
"763","3874.txt","validator.validate(""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"", xmlInput);","validator.validate(""http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd"", xmlInput);","validator.validate(""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"", xmlInput);"
"764","3877.txt","public void testCustomCharsetBadName() {","public void testCustomCharsetBadName() throws UnsupportedEncodingException {","public void testCustomCharsetToString() {"
"765","3885.txt","context.removeService(RemotingHttpUpgradeService.SERVICE_NAME);","context.removeService(RemotingHttpUpgradeService.UPGRADE_SERVICE_NAME.append(""management""));","context.removeService(UndertowHttpManagementService.SERVICE_NAME);"
"766","3901.txt","return StringUtils.EMPTY;","return """";","return str;"
"767","3903.txt","if (StringUtils.isEmpty(chars)) {","if (chars == null || chars.length() == 0) {","if (StringUtils.isEmpty(str)) {"
"768","3924.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"769","3925.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"770","3926.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"771","3938.txt","return bitIndex >= 0;","return 0 <= bitIndex && bitIndex <= Integer.MAX_VALUE;","return bitIndex == NULL_BIT_KEY;"
"772","3942.txt","throws IOException, ClassNotFoundException;","throws IOException;","throws IOException;"
"773","3945.txt","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","final int attCount = reader.getAttributeCount();"
"774","3949.txt","list8 = (List<Object>[]) list10; // NOTE cast is required by Sun Jave, but not by Eclipse","list8 = list10;","list8 = (List<Object>[]) list13;"
"775","3964.txt","if(descr != null && (descr.contains(""JBAS014807"") || descr.contains(""JBAS014793""))) {","if(descr != null && descr.contains(""JBAS014807"")) {","if(descr != null && descr.contains(""JBAS014807"")) {"
"776","3968.txt","public synchronized void start(StartContext context) throws StartException {","public void start(StartContext context) throws StartException {","public synchronized void stop(StopContext context) {"
"777","3972.txt","log.error(ServiceMBeanLogger.ROOT_LOGGER.postRegisterInitializationFailed(), e);","log.error(e);","log.warn(ServiceMBeanLogger.ROOT_LOGGER.initializationFailed(e, jbossInternalDescription()));"
"778","3984.txt","public void setUp() {","public void setUp() throws Exception {","public void testGetUpperBound() {"
"779","3985.txt","public void setUp() {","public void setUp() throws Exception {","public void testGetUpperBound() {"
"780","400.txt","return new FileUpdateTask(item, target, backup, modification);","return new FileModifyTask(item, target, backup, modification);","return new FileAddTask(item, target, backup, modification);"
"781","401.txt",".setValidator(new IntRangeValidator(1, 200, true, false))",".setValidator(new IntRangeValidator(1, 500, true, false))",".setValidator(new IntRangeValidator(1, 100, true, false))"
"782","4013.txt","if (server.hasDefined(SOCKET_BINDING_PORT_OFFSET) && server.get(SOCKET_BINDING_PORT_OFFSET).asInt() > 0) {","if (server.has(SOCKET_BINDING_PORT_OFFSET)) {","if (server.hasDefined(SOCKET_BINDING_GROUP)) {"
"783","4034.txt","double actual = Gamma.logGamma(x);","double actual = Gamma.logGamma(x, 10e-5, Integer.MAX_VALUE);","double actual = Gamma.regularizedGammaP(a, x);"
"784","4134.txt","List<String> frames = new ArrayList<String>();","ArrayList<String> frames = new ArrayList<String>();","List<String> list = new ArrayList<String>();"
"785","4138.txt","if (!isFixedPort) {","if (port > 0 && isFixedPort == false) {","if (this.isFixedPort) {"
"786","4139.txt","return entry == null ? inherited : entry.getDescriptionProvider();","return entry == null ? null : entry.getDescriptionProvider();","return entry == null ? inherited : entry.getOperationHandler();"
"787","4155.txt","return Collections.singleton(RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName));","return null;","serviceName = RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName);"
"788","4156.txt","cmdCtx = initCommandContext(defaultControllerHost, defaultControllerPort, username, password, false, connect);","cmdCtx = new CommandContextImpl();","cmdCtx = initCommandContext(defaultControllerHost, defaultControllerPort, username, password, false, true);"
"789","4157.txt","if (iorSecurityConfigMetaData != null && iorSecurityConfigMetaData.getTransportConfig() != null) {","if (iorSecurityConfigMetaData != null) {","if (iorSecurityConfigMetaData != null) {"
"790","4159.txt","final String line = in.readLine();","String line = in.readLine();","final String comment = line.trim();"
"791","4162.txt","}, authorizer));","}));","}"
"792","4188.txt","return; // not an ee deployment","return; // not an EE deployment","return;"
"793","4189.txt","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnviroment == null","if (serverEnvironment != null) { // TODO eliminate test cases that result in serverEnvironment == null","if (serverEnvironment != null) {"
"794","4216.txt","return; //not an ee deployment","return; //not an EE deployment","return;"
"795","4239.txt","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","zkStr,"
"796","4243.txt","super();","; // empty constructor","= FastDateFormat.getInstance(""yyyy-MM-dd'T'HH:mm:ss"");"
"797","4244.txt","super();","; // empty constructor","super();"
"798","4245.txt","super();","; // empty constructor","stopTime = -1;"
"799","4295.txt","private String clientLibraryUrl = ""https://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js"";","private String clientLibraryUrl = ""https://d1fxtkz8shb9d2.cloudfront.net/sockjs-0.3.4.min.js"";","private String name = ""SockJSService@"" + ObjectUtils.getIdentityHexString(this);"
"800","4296.txt","private transient V value;","private V value;","private transient boolean groupLockHeld;"
"801","4297.txt","private static void usage() {","public static void usage() {","private static void abort(Throwable t) {"
"802","4301.txt","serverOp.get(CONTENT).set(domainDeployment.require(CONTENT));","serverOp.get(CONTENT).get(0).get(HASH).set(domainDeployment.require(CONTENT).require(0).require(HASH).asBytes());","serverOp.get(RUNTIME_NAME).set(domainDeployment.get(RUNTIME_NAME));"
"803","4308.txt","} else if (length > size) {","} else {","} else if (length >= size) {"
"804","4309.txt","final ModelNode processId = operation.hasDefined(PROCESS_ID) ? operation.get(PROCESS_ID) : new ModelNode();","final ModelNode processId = operation.require(PROCESS_ID);","final ModelNode processId = operation.require(PROCESS_ID);"
"805","4313.txt","System.out.println(updates);","//System.out.println(combiner.createUpdates());","//System.out.println(hostModel);"
"806","4322.txt","} else { // onClass","} else { // onclass","} else {"
"807","4344.txt","setIDLName(getIDLName()); // Fix operation names","setIDLName(getIDLName()); // Fixup operation names","mutatorAnalysis.setIDLName(""_set_"" + idlName);"
"808","4394.txt","} catch (NoSuchMethodException e) { // NOPMD - Swallow the exception","} catch (NoSuchMethodException e) { /* SWALLOW - NOPMD */","} catch (NoSuchMethodException e) {"
"809","4395.txt","ArrayList<String> al = new ArrayList<String>();","ArrayList al = new ArrayList();","List<String> results = new ArrayList<String>();"
"810","4400.txt","return MessageBuilder.withPayload("""").setHeaders(headers).build();","return MessageBuilder.withPayloadAndHeaders("""", headers).build();","return MessageBuilder.withPayload("""").copyHeaders(headers.toMap()).build();"
"811","4459.txt","listField.remove(Integer.valueOf(random.nextInt(N)));","listField.removeFirstOccurrence(Integer.valueOf(random.nextInt(N)));","listField.add(Integer.valueOf(random.nextInt(N)));"
"812","4463.txt","@SuppressWarnings({ ""unchecked""})","@SuppressWarnings({ ""unchecked"", ""rawtypes"" })","@SuppressWarnings(""unchecked"")"
"813","4467.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"814","4479.txt","checkName(""0302-0601-3\u00b1\u00b1\u00b1F06\u00b1W220\u00b1ZB\u00b1LALALA\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1CAN\u00b1\u00b1DC\u00b1\u00b1\u00b104\u00b1060302\u00b1MOE.model"");","checkName(""0302-0601-3±±±F06±W220±ZB±LALALA±±±±±±±±±±CAN±±DC±±±04±060302±MOE.model"");","checkName("""");"
"815","4481.txt","this.ejbClientContext.unregisterEJBReceiver(localEjbReceiver);","localEjbReceiver.stop(context);","this.clientContext.registerEJBReceiver(receiver);"
"816","4498.txt","protected static final PathElement DEPLOYMENT_OVERRIDE_DEPLOYMENT_PATH = PathElement.pathElement(ModelDescriptionConstants.DEPLOYMENT);","protected static final PathElement DEPLOYMENT_OVERRIDE_LINK_PATH = PathElement.pathElement(ModelDescriptionConstants.DEPLOYMENT_OVERLAY_LINK);","protected static final PathElement DEPLOYMENT_OVERRIDE_PATH = PathElement.pathElement(ModelDescriptionConstants.DEPLOYMENT_OVERLAY);"
"817","45.txt","when(this.manager.createSessionId()).thenReturn(sessionId);","when(this.manager.createIdentifier()).thenReturn(sessionId);","when(this.manager.createSession(sessionId)).thenReturn(session);"
"818","4527.txt","assertEquals(expected.toUpperCase(), new String(actual));","assertEquals(expected, new String(actual));","assertEquals(expected, new String(actual));"
"819","4552.txt","assertEquals(0, handler.getMaximalValueError(), 1.1e-7);","assertTrue(handler.getMaximalValueError() < 5.0e-8);","assertEquals(0, handler.getMaximalTimeError(), 1.0e-12);"
"820","46.txt","when(manager.createSessionId()).thenReturn(sessionId);","when(manager.createIdentifier()).thenReturn(sessionId);","when(manager.createSession(sessionId)).thenReturn(session);"
"821","4620.txt","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","final int attCount = reader.getAttributeCount();"
"822","4655.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHomeHandleMessage());"
"823","4659.txt","TransactionSubsystemRootResourceDefinition.ENABLE_STATISTICS.parseAndSetParameter(value, operation, reader);","TransactionSubsystemRootResourceDefinition.STATISTICS_ENABLED.parseAndSetParameter(value, operation, reader);","TransactionSubsystemRootResourceDefinition.ENABLE_TSM_STATUS.parseAndSetParameter(value, operation, reader);"
"824","4670.txt","return;","throw new RuntimeException(""FIXME"");","final MethodIdentifier postConstructIdentifier = MethodIdentifier.getIdentifier(void.class, postConstruct);"
"825","4671.txt","return;","throw new RuntimeException(""FIXME"");","EEModuleClassDescription interceptorModuleClassDescription = null;// applicationClassesDescription.getOrAddClassByName(interceptorClassName);"
"826","4672.txt","return;","throw new RuntimeException(""FIXME"");","return SessionBeanMetaData.class;"
"827","4680.txt","defaultDependencies.add(""deployment.arquillian-service"");","defaultDependencies.add(""org.jboss.arquillian.core"");","defaultDependencies.add(""org.junit"");"
"828","4681.txt","mbeanServer.getAttribute(objectName, ""IntervalSeconds"");","Object o = mbeanServer.getAttribute(objectName, ""IntervalSeconds"");","mbeanServer.setAttribute(objectName, new Attribute(""IntervalSeconds"", 2));"
"829","4685.txt","public SimpleOperationDefinitionBuilder setParameters(AttributeDefinition... parameters) {//todo add validation for same param name","public SimpleOperationDefinitionBuilder setParameters(AttributeDefinition... parameters) {","public SimpleOperationDefinitionBuilder setReplyParameters(AttributeDefinition... replyParameters) {"
"830","4717.txt","public static BodyBuilder unprocessableEntity() {","public static HeadersBuilder<?> unprocessableEntity() {","public static BodyBuilder accepted() {"
"831","4722.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"832","4759.txt","node.get(type, CommonAttributes.STICKY_SESSION_FORCE, DEFAULT).set(false);","node.get(type, CommonAttributes.STICKY_SESSION_FORCE, DEFAULT).set(true);","node.get(type, CommonAttributes.STICKY_SESSION_REMOVE, DEFAULT).set(false);"
"833","4763.txt","TransactionSubsystemRootResourceDefinition.ENABLE_STATISTICS.parseAndSetParameter(value, operation, reader);","TransactionSubsystemRootResourceDefinition.STATISTICS_ENABLED.parseAndSetParameter(value, operation, reader);","TransactionSubsystemRootResourceDefinition.ENABLE_TSM_STATUS.parseAndSetParameter(value, operation, reader);"
"834","4773.txt","if (component.isStateful()) {","if (metaData instanceof SessionBeanMetaData) {","if (component.getDescriptorData() == null) {"
"835","4791.txt","super();","// no init.","return 0;"
"836","4811.txt","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","zkStr,"
"837","484.txt","if (Charset.forName(csName).canEncode() && ! ""COMPOUND_TEXT"".equalsIgnoreCase(csName) && ! ""x-COMPOUND_TEXT"".equalsIgnoreCase(csName)) {","if (Charset.forName(csName).canEncode() && ! ""COMPOUND_TEXT"".equalsIgnoreCase(csName)) {","if (Charset.forName(csName).canEncode() && ! ""COMPOUND_TEXT"".equalsIgnoreCase(csName)) {"
"838","49.txt","start(adapter);","adapter.afterPropertiesSet();","adapter.setBeans(beans);"
"839","4930.txt","processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_WELD_WEB_INTEGRATION, new WebIntegrationProcessor());","processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME, Phase.PARSE, Phase.PARSE_WELD_WEB_INTEGRATION, new WebIntegrationProcessor());","processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_WELD_BEAN_ARCHIVE, new BeanArchiveProcessor());"
"840","4937.txt","public void testStandaloneOSGiXml() throws Exception {","public void testStandaloneOSGiOnlyXml() throws Exception {","public void testStandaloneXtsXml() throws Exception {"
"841","4942.txt","context.removeService(ChannelService.getStackServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getFactoryServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getServiceName(ChannelService.DEFAULT));"
"842","4953.txt","// NO-OP","namingStore.close();","return getNameParser(name).parse(name);"
"843","4986.txt","if (max >= 0 && pos >= max) {","if (max>=0 && pos==max) {","if (max>=0 && pos>=max) {"
"844","50.txt","start(exporter);","exporter.afterPropertiesSet();","pf.setTarget(tb);"
"845","5009.txt","assertTrue(""Correct message"", message.toString().startsWith(""test &amp; text &""));","assertEquals(""Correct message"", ""test &amp; text &eacute;"", message.toString());","assertEquals(""Correct message"", ""test arg1 message 5"", message.toString());"
"846","5116.txt","if (ak2 == 0) {","if (ak2 < 1.0e-66) {","if (dk == 0) {"
"847","5130.txt","return ExpressionUtils.convertTypedValue(context, new TypedValue(value), desiredResultType);","return ExpressionUtils.convertTypedValue(null, new TypedValue(value), desiredResultType);","return ExpressionUtils.convertTypedValue(context, new TypedValue(value), expectedResultType);"
"848","5137.txt","EJB3_2_0(""urn:jboss:domain:ejb3:2.0""),","EJB3_1_5(""urn:jboss:domain:ejb3:1.5""),","EJB3_1_0(""urn:jboss:domain:ejb3:1.0""),"
"849","5159.txt","throw new CommandLineException(""if request failed: "" + Util.getFailureDescription(response));","new CommandLineException(""if request failed: "" + Util.getFailureDescription(response));","throw new CommandLineException(""else request failed: "" + Util.getFailureDescription(response));"
"850","5167.txt","this.sourceValueType = sourceValueType;","this.targetKeyType = targetKeyType;","this.targetValueType = targetValueType;"
"851","534.txt","if (files == null) {  // null if abstract pathname does not denote a directory, or if an I/O error occurs","if (files == null) {  // null if security restricted","if (file == null) {"
"852","5353.txt","public static final AttachmentKey<Map<String, MountedDeploymentOverlay>> DEPLOYMENT_OVERLAY_LOCATIONS = AttachmentKey.create(Map.class);","public static final AttachmentKey<AttachmentList<VirtualFile>> DEPLOYMENT_OVERRIDE_LOCATIONS = AttachmentKey.createList(VirtualFile.class);","public static final AttachmentKey<Map<ModuleIdentifier, CompositeIndex>> ADDITIONAL_ANNOTATION_INDEXES_BY_MODULE = AttachmentKey.create(Map.class);"
"853","5363.txt","assertEquals(""1"", binder.getBindingResult().getFieldValue(""integerList[0]""));","// TODO add back assertEquals(""1"", binder.getBindingResult().getFieldValue(""integerList[0]""));","assertEquals(""1x2"", binder.getBindingResult().getFieldValue(""integerList[0]""));"
"854","5369.txt","if (elementPatchType == Patch.PatchType.ONE_OFF) {","if (type == Patch.PatchType.ONE_OFF) {","if (elementPatchType == Patch.PatchType.UPGRADE) {"
"855","5378.txt","for (AttributeDefinition attribute : ConnectorServiceDefinition.ATTRIBUTES) {","for (AttributeDefinition attribute : CommonAttributes.CONNECTOR_SERVICE_ATTRIBUTES) {","for (AttributeDefinition attribute : ClusterConnectionDefinition.ATTRIBUTES) {"
"856","5398.txt","return stateEstimation.toArray();","return stateEstimation.getData();","return stateEstimation.copy();"
"857","543.txt","public void wasDefaultServletFolderWithCompliantSetting() throws Exception {","public void tomcatDefaultServletFolderWithCompliantSetting() throws Exception {","public void wasDefaultServletRootWithCompliantSetting() throws Exception {"
"858","5453.txt","if (dayOfMonthStart.equals(dayOfMonthEnd)) {","if (dayOfMonthStart == dayOfMonthEnd) {","if (dayOfMonthStart > dayOfMonthEnd) {"
"859","5461.txt","sb.replaceFirst('d', 'd');","sb.replaceAll('d', 'd');","sb.replaceFirst('x', 'y');"
"860","5473.txt","throw ProtocolMessages.MESSAGES.nullVar(""connectTask"");","ProtocolMessages.MESSAGES.nullVar(""connectTask"");","throw ProtocolMessages.MESSAGES.channelClosed();"
"861","5476.txt","throw unexpectedAttribute(reader, i);","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, 0);"
"862","5477.txt","throw unexpectedAttribute(reader, i);","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, 0);"
"863","55.txt",".setValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setElementValidator(new StringLengthValidator(1, Integer.MAX_VALUE, false, false))",".setValidator(new IntRangeValidator(0, Integer.MAX_VALUE, true, false))"
"864","5507.txt","throw nameNotFoundException(childName, contextNode.fullName);","throw nameNotFoundException(childName, currentName);","throw nameNotFoundException(childName, fullName);"
"865","5531.txt","properties.setProperty(ServerEnvironment.HOME_DIR, SecurityActions.getSystemProperty(""jboss.home.dir""));","properties.setProperty(ServerEnvironment.HOME_DIR, ServerEnvironment.HOME_DIR);","properties.setProperty(ServerEnvironment.CONTROLLER_TEMP_DIR, SecurityActions.getSystemProperty(""jboss.domain.temp.dir""));"
"866","5532.txt","public static final String APPLICATION_CLASSIFICATION = ""application-classification"";","public static final String APPLICATION_TYPE = ""application-type"";","public static final String APPLICATION = ""application"";"
"867","5533.txt","resourceRegistration.registerSubModel(ApplicationClassificationParentResourceDefinition.INSTANCE);","resourceRegistration.registerSubModel(ApplicationTypeParentResourceDefinition.INSTANCE);","resourceRegistration.registerSubModel(SensitivityClassificationParentResourceDefinition.INSTANCE);"
"868","5536.txt","statusCodes.put(308, ""PERMANENT_REDIRECT"");","statusCodes.put(308, ""RESUME_INCOMPLETE"");","statusCodes.put(307, ""TEMPORARY_REDIRECT"");"
"869","5539.txt",".build();",".setAllowExpression(true).build();",".build();"
"870","5552.txt","return doGet(attributeName, Class.class);","return (Class<T>)doGet(attributeName, Class.class);","return doGet(attributeName, Class[].class);"
"871","5565.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"872","5567.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"873","5582.txt",".setDefaultValue(new ModelNode(""""))",".setDefaultValue(new ModelNode(""default""))",".setDefaultValue(new ModelNode(-1))"
"874","5594.txt","return requires;","return alternatives;","return result;"
"875","561.txt","if(nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null || nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null) {"
"876","563.txt","assertEquals(35, target.getAge());","assertEquals(25, target.getAge());","assertEquals(25, target.getAge());"
"877","5650.txt","//import org.apache.commons.lang.text.TextTestSuite;","import org.apache.commons.lang.text.TextTestSuite;","suite.addTest(org.apache.commons.lang.enum.EnumTestSuite.suite());"
"878","5656.txt","if (providedArgs == null) {","if (providedArgs == null || parameter.hasParameterAnnotations()) {","if (args[i] == null) {"
"879","58.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true))"
"880","5801.txt","throw new RuntimeException(""Caught exception during processing of standalone.xml"", e);","throw new RuntimeException(""Caught exception during processing of host.xml"", e);","throw new RuntimeException(""Caught exception during processing of host.xml"", e);"
"881","5803.txt","public BrokerHosts hosts;","BrokerHosts hosts;","public List<HostPort> hosts;"
"882","5804.txt","return 0.0;","return Double.NEGATIVE_INFINITY;","return mu;"
"883","5809.txt","this.type = this.resolvableType.resolve(property.getType());","this.type = this.resolvableType.resolve(Object.class);","this.type = this.resolvableType.resolve(Object.class);"
"884","5864.txt","public CompositeSet(Set<E>... sets) {","public CompositeSet(Set<E>[] sets) {","public CompositeSet(Set<E> set) {"
"885","5904.txt","command.add(TestSuiteEnvironment.getJavaPath());","command.add(""java"");","command.add(modulePath);"
"886","5908.txt","}","};","};"
"887","591.txt","AnnotationValue nameValue = annotation.value(""filterName"");","AnnotationValue nameValue = annotation.value(""name"");","AnnotationValue nameValue = annotation.value(""name"");"
"888","5921.txt",".setDefaultValue(new ModelNode(""access_log.""))",".setDefaultValue(new ModelNode(false))",".setDefaultValue(new ModelNode(false))"
"889","5923.txt","readExternalFormFromBytes(objekt);","Object p = readExternalFormFromBytes(objekt);","writeExternalFormToStream(o, byteStream);"
"890","5952.txt","RECOVERY_LISTENER(""recovery-listener""),","PROCESS_ID(""process-id""),","RELATIVE_TO(""relative-to""),"
"891","6003.txt","throws NumberIsTooLargeException, FractionConversionException {","throws MathArithmeticException {","throws MathArithmeticException {"
"892","6070.txt","Assert.assertTrue(Double.isNaN(w.getReal()));","Assert.assertEquals(w.getReal(), 4.0, 0);","Assert.assertTrue(Double.isNaN(z.getReal()));"
"893","6084.txt","new ServerGroupRemoveHandler(null).execute(operationContext, operation);","ServerGroupRemoveHandler.INSTANCE.execute(operationContext, operation);","new ServerGroupAddHandler(master).execute(operationContext, operation);"
"894","6087.txt","@Message(id = 67, value = ""Could not find the port number listening for protocol %s"")","@Message(id = 67, value = ""Servlet class not defined for servlet %s"")","@Message(id = 63, value = ""Could not find the port number listening for protocol %s"")"
"895","6139.txt","URL expected = new URL(""http://somewhere/url2"");","URL expected = new URL(""http://localhost/url2"");","URL actual = bean.getURL2();"
"896","6143.txt","tmp = new File(serverBaseDir, ""tmp"");","tmp = serverTempDir;","tmp = new File(serverBaseDir, ""data"");"
"897","6151.txt","if (children.contains(pe.getKey()) && model.hasDefined(pe.getKey()) && model.get(pe.getKey()).hasDefined(pe.getValue())) {","if (children.contains(pe.getKeyValuePair())) {","if (children.contains(pe.getKey()) && model.hasDefined(pe.getKey())) {"
"898","6159.txt","BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException;","public BigMatrix preMultiply(BigMatrix m) throws IllegalArgumentException;","BigMatrix multiply(BigMatrix m) throws IllegalArgumentException;"
"899","6160.txt","FieldMatrix<T> preMultiply(FieldMatrix<T> m) throws IllegalArgumentException;","public FieldMatrix<T> preMultiply(FieldMatrix<T> m) throws IllegalArgumentException;","FieldMatrix<T> multiply(FieldMatrix<T> m) throws IllegalArgumentException;"
"900","6161.txt","RealMatrix preMultiply(RealMatrix m) throws IllegalArgumentException;","public RealMatrix preMultiply(RealMatrix m) throws IllegalArgumentException;","RealMatrix multiply(RealMatrix m) throws IllegalArgumentException;"
"901","6168.txt","double[] inversetransform(double f[])","public abstract double[] inversetransform(double f[])","double[] transform(double f[])"
"902","6187.txt","public static final String APPCLIENT_CONFIG = ""--appclient-config"";","public static final String GLOBAL_MODULES = ""-global-modules"";","public static final String DOMAIN_CONFIG = ""--domain-config"";"
"903","6188.txt","authorize(false, READ_WRITE_CONFIG);","// TODO I believe that >>   authorize(false, READ_WRITE_CONFIG);   << belongs here; see readModelForUpdate","authorize(true, READ_WRITE_CONFIG);"
"904","6205.txt",".setValidator(new IntRangeValidator(1, 500, true, false))",".setValidator(new IntRangeValidator(1, 200, true, false))",".setValidator(new IntRangeValidator(1, 100, true, false))"
"905","6209.txt","protected Entry() {","private Entry() {","protected Enum(String name) {"
"906","6210.txt","public void testCtor() {","public void testCtor() throws IOException {","public void testSymmetry() {"
"907","6214.txt","Assert.assertEquals(getCompareStackAsString(stack) + "": "" + node1 + ""\n"" + node2, keys1.toString(), keys2.toString());","Assert.assertEquals(node1 + ""\n"" + node2, keys1.toString(), keys2.toString());","Assert.assertEquals(getCompareStackAsString(stack) + "" types"", node1.getType(), node2.getType());"
"908","6238.txt",".addAttributes(SingleSignOnDefinition.INSTANCE.getAttributes())",".addAttributes(SingleSignOnDefinition.DOMAIN, SingleSignOnDefinition.RE_AUTHENTICATE)",".addAttributes(FilterRefDefinition.INSTANCE.getAttributes())"
"909","6248.txt","return (this.locale != null ? this.locale.toString() : ""-"");","return this.locale.toString();","return this.locale;"
"910","6249.txt","final BigDecimal[] out = new BigDecimal[nRows];","final BigDecimal[] out = new BigDecimal[v.length];","final BigDecimal[] out = new BigDecimal[ncols];"
"911","6250.txt","final double[] out = new double[nRows];","final double[] out = new double[v.length];","final double[] out = new double[ncols];"
"912","6255.txt","long endTime = System.currentTimeMillis() + 60000;","long endTime = System.currentTimeMillis() + 10000;","long endTime = System.currentTimeMillis() + 10000;"
"913","63.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1))"
"914","6301.txt","cmdRegistry.registerHandler(new BatchHandler(this), ""batch"");","cmdRegistry.registerHandler(new BatchHandler(), ""batch"");","cmdRegistry.registerHandler(new BatchRunHandler(this), ""run-batch"");"
"915","6318.txt","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)),","15000,","Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),"
"916","6333.txt","if (! authenValves.isEmpty()) {","if (authenValves != null) {","if (path.endsWith("".jar"")) {"
"917","6343.txt","super.put(key, props.get(key));","setProperty(key, props.get(key));","super.put(key, s);"
"918","6362.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"919","6395.txt","return Short.valueOf(this.value);","return new Short(this.value);","return Short.valueOf(shortValue());"
"920","64.txt",".setValidator(new StringLengthValidator(1, true, true))",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true))"
"921","6419.txt","return reflectionCompare(lhs, rhs, compareTransients, reflectUpToClass, null);","return reflectionCompare(lhs, rhs, false, reflectUpToClass, null);","return reflectionCompare(lhs, rhs, compareTransients, null, null);"
"922","6420.txt","DigestUtils.sha1Hex(new ByteArrayInputStream(testData)));","DigestUtils.shaHex(new ByteArrayInputStream(testData)));","DigestUtils.shaHex(new ByteArrayInputStream(testData)));"
"923","65.txt",".setValidator(new StringLengthValidator(1, false))",".setElementValidator(new StringLengthValidator(1, false))",".setValidator(new StringLengthValidator(1, true, false))"
"924","6616.txt","public static DescriptionProvider BOUNDED_QUEUE_THREAD_POOL_DESC = new DescriptionProvider() {","static DescriptionProvider BOUNDED_QUEUE_THREAD_POOL_DESC = new DescriptionProvider() {","static final DescriptionProvider UNBOUNDED_QUEUE_THREAD_POOL_DESC = new DescriptionProvider() {"
"925","6622.txt","return this.path;","return path;","return this.port;"
"926","6623.txt","connectionManager.pushMetaAwareObject(this, unsharable);","cachedConnectionManager.getValue().pushMetaAwareObject(this, unsharable);","connectionManager.popMetaAwareObject(unsharable);"
"927","6629.txt","((StandardEvaluationContext)state.getEvaluationContext()).setRootObject(null);","((StandardEvaluationContext)state.getEvaluationContext()).setRootObject(null,TypeDescriptor.NULL);","((StandardEvaluationContext) state.getEvaluationContext()).setRootObject(null);"
"928","6635.txt","handleElementText(reader, element, bridgeAdd);","skipElementText(reader);","handleElementText(reader, element, ""bridge"", bridgeAdd);"
"929","6636.txt","public Set<String> getResourcePaths(String path) {","public Set getResourcePaths(String path) {","public InputStream getResourceAsStream(String path) {"
"930","6642.txt","static final char BACKSLASH = '\\';","static final char ESCAPE = '\\';","static final char BACKSPACE = '\b';"
"931","6659.txt","} catch (ReflectionException e) {","} catch (NoSuchMethodException e) {","} catch (Exception e) {"
"932","6672.txt","public void setName(String v) {","void setName(String v) {","public String getName() {"
"933","6679.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"934","6683.txt","return Double.NEGATIVE_INFINITY;","return 0.0;","return Double.POSITIVE_INFINITY;"
"935","6686.txt","public static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","public static final ServiceName JBOSS_SERVER_CONTROLLER = JBOSS_AS.append(""server-controller"");"
"936","6689.txt","header.write(NID.kEnd);","header.write(0);","header.write(NID.kAnti);"
"937","6695.txt","optimizer.optimize(builder.build());","Optimum optimum = optimizer.optimize(builder.build());","optimizer.optimize(problem.getBuilder().build());"
"938","6696.txt","p.evaluate(dummy);","final Evaluation eval = p.evaluate(dummy);","eval.getResiduals();"
"939","6700.txt","TestUtils.assertChiSquareAccept(expected, observed, 0.001);","TestUtils.assertChiSquareAccept(expected, observed, 0.01);","TestUtils.assertChiSquareAccept(expected, observed, 0.0001);"
"940","6701.txt","assertTrue(binder.getBindingResult().getFieldValue(""instant"").toString().startsWith(""2009-10-31T12:00""));","assertEquals(""2009-10-31T12:00Z"", binder.getBindingResult().getFieldValue(""instant""));","assertEquals(""12:00:00"", binder.getBindingResult().getFieldValue(""isoTime""));"
"941","6708.txt","//connection.stop();","connection.close();","connection.start();"
"942","6709.txt","//connection.stop();","connection.close();","connection.start();"
"943","6722.txt","this.previousRun = null;","this.previousRun = builder.previousRun;","this.previousRun = previousRun;"
"944","6736.txt","if (this.targetListClass != null) {","if (this.targetListClass != null && JdkVersion.isAtLeastJava15()) {","if (targetListClass == null) {"
"945","6737.txt","if (this.targetMapClass != null) {","if (this.targetMapClass != null && JdkVersion.isAtLeastJava15()) {","if (targetMapClass == null) {"
"946","6856.txt","fail(result.asString());","fail(result.get(FAILURE_DESCRIPTION).asString());","fail(""Didn't fail: "" + result.asString());"
"947","6875.txt","public void transactionalTest() {","public void lookUpByTypeAndDefaultName() {","public void afterTransaction() {"
"948","6876.txt","public void transactionalTest() {","public void lookUpByTypeAndName() {","public void afterTransaction() {"
"949","6877.txt","public void transactionalTest() {","public void lookUpByTypeAndQualifier() {","public void afterTransaction() {"
"950","6878.txt","public void transactionalTest() {","public void lookUpByTypeAndQualifier() {","public void afterTransaction() {"
"951","6879.txt","public void transactionalTest() {","public void lookUpByType() {","public void afterTransaction() {"
"952","6914.txt","final String jndiName = model.get(JNDINAME.getName()).asString();","final String jndiName = operation.hasDefined(JNDINAME.getName()) ? operation.get(JNDINAME.getName()).asString() : dsName;","final String driverName = node.asString();"
"953","6918.txt","if (!ObjectUtils.isEmpty(validationHints) && validator instanceof SmartValidator) {","if (validator instanceof SmartValidator) {","if (!ObjectUtils.isEmpty(requiredFields)) {"
"954","6924.txt","static final AttributeDefinition[] ATTRIBUTES = new AttributeDefinition[] {","static final AttributeDefinition[] ATTRIBUTES = new AttributeDefinition[] {PoolAttributeDefinitions.PROPERTIES,","static final AttributeDefinition[] RW_ATTRIBUTES = new AttributeDefinition[] {"
"955","6937.txt","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL1, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));"
"956","6967.txt","System.exit(ExitCodes.NORMAL);","System.exit(0);","System.exit(ExitCodes.RESTART_PROCESS_FROM_STARTUP_SCRIPT);"
"957","7001.txt","ENTRIES.resolveModelAttribute(context, model);","ENTRIES.validateResolvedOperation(model);","ENTRIES.validateAndSet(operation, model);"
"958","7002.txt","attribute.resolveModelAttribute(context, model);","attribute.validateResolvedOperation(model);","attribute.validateAndSet(operation, model);"
"959","7003.txt","attribute.resolveModelAttribute(context, model);","attribute.validateResolvedOperation(model);","attribute.validateAndSet(operation, model);"
"960","7004.txt","attribute.resolveModelAttribute(context, model);","attribute.validateResolvedOperation(model);","attribute.validateAndSet(operation, model);"
"961","7005.txt","attribute.resolveModelAttribute(context, model);","attribute.validateResolvedOperation(model);","attribute.validateAndSet(operation, model);"
"962","7006.txt","attribute.resolveModelAttribute(context, model);","attribute.validateResolvedOperation(model);","attribute.validateAndSet(operation, model);"
"963","7042.txt","this.advice = buildAdvice(executor, exceptionHandler);","this.advice = buildAdvice(executor, this.exceptionHandler);","this.advice = buildAdvice(executor, this.exceptionHandler);"
"964","7045.txt","@Bean","@Bean @Lazy","@Bean @Lazy"
"965","7059.txt",".setResourceResolvers(new FingerprintResourceResolver(), new PathResourceResolver());",".addVersionHash(""/**"");","ResourceUrlProvider urlProvider = ctx.getBean(ResourceUrlProvider.class);"
"966","7085.txt","final ListIterator<DeploymentUnitProcessor> iterator = list.listIterator(list.size());","final ListIterator<DeploymentUnitProcessor> iterator = list.listIterator();","final ListIterator<DeploymentUnitProcessor> iterator = list.listIterator();"
"967","7088.txt","return res;","return null;","return result;"
"968","7101.txt","protected volatile int maxActiveAllowed = -1;","protected int maxActiveAllowed = -1;","protected volatile int maxActive = 0;"
"969","713.txt","//            @Override","@Override","int f = 0; // start at 0; the best fitness"
"970","7134.txt","datePriorToEpoch(""/preepoch-star.tar"");","datePriorToEpoch(""/preepoch-gnu.tar"");","datePriorToEpoch(""/preepoch-posix.tar"");"
"971","714.txt","protected void finalize()","public void finalize()","private void initialize()"
"972","7173.txt","if (child.getLowerCaseName().toLowerCase().endsWith(JAR_EXTENSION)) {","if (child.getName().toLowerCase().endsWith(JAR_EXTENSION)) {","if (child.getName().toLowerCase().endsWith(JAR_EXTENSION)) {"
"973","7183.txt","final String message = ""<soapenv:Envelope xmlns:soapenv=\""http://schemas.xmlsoap.org/soap/envelope/\"" xmlns:test=\""http://ejb.ws.integration.testsuite.as.jboss.org/\"">""","final String message = ""<soapenv:Envelope xmlns:soapenv=\""http://schemas.xmlsoap.org/soap/envelope/\"" xmlns:test=\""http://wsejb.integration.testsuite.as.jboss.org/\"">""","return ShrinkWrap.create(JavaArchive.class, ""ejbws-example.jar"")"
"974","721.txt","mbeanServer.getAttribute(objectName, ""IntervalSeconds"");","Object o = mbeanServer.getAttribute(objectName, ""IntervalSeconds"");","mbeanServer.setAttribute(objectName, new Attribute(""IntervalSeconds"", 2));"
"975","7230.txt","if (ch == '/' && value.charAt(value.length() - 1) != '/') {","if (ch == '/') {","if (ch == '/') {"
"976","7234.txt","@Test @Ignore(""AS7-3632"")","@Test","@Test"
"977","7237.txt","catch (Throwable ex) {","catch (Exception ex) {","catch (Throwable ex2) {"
"978","7238.txt","catch (Throwable ex) {","catch (Exception ex) {","catch (Throwable ex2) {"
"979","724.txt","@Ignore(""Test migrated to managed container"")","//@Ignore","abstract String getKillCommand(RunningProcess process);"
"980","7240.txt","catch (Throwable ex) {","catch (Exception ex) {","catch (RollbackException ex) {"
"981","7314.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHomeHandleMessage());"
"982","7321.txt","if (destination != null) {","if (destination != null && info.getSubscriptions(destination) == null) {","if (info != null) {"
"983","7358.txt","throw ServerMessages.MESSAGES.timeoutWaitingForModuleService(identifier);","throw new ModuleLoadException(""Timeout waiting for module service: "" + identifier);","throw ServerMessages.MESSAGES.serviceModuleLoaderAlreadyStarted();"
"984","7366.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"985","7369.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"986","7390.txt","assertStopWatchTimeLimit(sw, 6000);","assertStopWatchTimeLimit(sw, 3000);","assertStopWatchTimeLimit(sw, 9000);"
"987","7399.txt","return new StringBuilder(str).reverse().toString();","return CharSequenceUtils.reverse(str).toString();","return new StringBuilder(strLen)"
"988","7403.txt","Assert.assertTrue(LifecycleInterceptorWithProceed.postConstruct);","Assert.assertTrue(LifecycleInterceptorNoProceed.postConstruct);","Assert.assertTrue(LifecycleInterceptorNoProceed.postConstruct);"
"989","7415.txt","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);"
"990","7429.txt","}, (DescriptionProvider) null);","}, null);","}"
"991","7435.txt","ServerOperationResolver.addToDontPropagateToServersAttachment(context, operation);","context.attach(ServerOperationResolver.DONT_PROPAGATE_TO_SERVERS_ATTACHMENT, true);","//Set an attachment to avoid propagation to the servers, we don't want them to go into restart-required if nothing changed"
"992","7436.txt","ServerOperationResolver.addToDontPropagateToServersAttachment(context, operation);","context.attach(ServerOperationResolver.DONT_PROPAGATE_TO_SERVERS_ATTACHMENT, true);","//Set an attachment to avoid propagation to the servers, we don't want them to go into restart-required if nothing changed"
"993","7453.txt","assertEquals(6, b64stream.skip(Integer.MAX_VALUE));","assertEquals(6, b64stream.skip(1024));","assertEquals(6, b64stream.skip(6));"
"994","7460.txt","if (maxPending != null) {","if (maxPending != null && maxPending instanceof Number) {","if (write != null) {"
"995","75.txt",".setValidator(new StringLengthValidator(1))",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1, true, false))"
"996","7517.txt","this.previousRun = builder.previousRun;","this.previousRun = null;","this.previousRun = previousRun;"
"997","7532.txt","String line3 = lines.get(2); // the line may be interested in","String line3 = (String) lines.get(2); // the line may be interested in","String line2 = lines.get(1); // the line we're interested in"
"998","7557.txt","assertTrue(name + "" is not defined"", resource.get(name).isDefined());","assertTrue(resource.get(name).isDefined());","assertTrue(timer.get(""schedule"", ""second"").isDefined());"
"999","7580.txt","// ignored",";","long[] observed = new long[4];"
"1000","7581.txt","// ignored",";","// infData"
"1001","7586.txt","final File input = getFile(""COMPRESS-114.tar"");","final File input = getFile(""compress-114.tar"");","final File input = getFile(""bla.tar"");"
"1002","7608.txt","return Double.NEGATIVE_INFINITY;","return 0.0;","return Double.POSITIVE_INFINITY;"
"1003","7614.txt","String protocol = null; // https://github.com/sockjs/sockjs-client/issues/130","String protocol = null; // TODO: https://github.com/sockjs/sockjs-client/issues/130","logger.debug(""another "" + getTransportType() + "" connection still open: "" + sockJsSession);"
"1004","7633.txt","return MatrixUtils.createRealMatrix(bp);","return new RealMatrixImpl(bp, false);","return solve(MatrixUtils.createRealIdentityMatrix(m));"
"1005","7634.txt","return MatrixUtils.createRealMatrix(xData);","return new RealMatrixImpl(xData, false);","return solve(MatrixUtils.createRealIdentityMatrix(p));"
"1006","7636.txt","@Test(expected=ArrayIndexOutOfBoundsException.class)","@Test(expected=IllegalArgumentException.class)","@Test(expected=IllegalArgumentException.class)"
"1007","7678.txt","Integer.valueOf(index), Integer.valueOf(sz)));","index, sz));","return elements[lastReturnedIndex];"
"1008","7679.txt","new DurationFormatUtils.Token( DurationFormatUtils.y, 1 )","new DurationFormatUtils.Token( new Object(), 1 )","new DurationFormatUtils.Token( DurationFormatUtils.S, 1)"
"1009","7688.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"1010","7691.txt","return create(ClientConfigurationImpl.create(protocol, hostName, port, handler, sslContext, connectionTimeout, saslOptions));","return create(ClientConfigurationImpl.create(protocol, hostName, port, handler, sslContext, connectionTimeout));","return create(ClientConfigurationImpl.create(protocol, hostName, port, handler, sslContext, connectionTimeout));"
"1011","7693.txt","return pattern2.length() - pattern1.length();","return 0;","return pattern1 + pattern2;"
"1012","77.txt","public boolean hasSubscription(MessageHandler handler) {","protected boolean hasSubscription(MessageHandler handler) {","public boolean unsubscribeInternal(MessageHandler handler) {"
"1013","7700.txt","return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);","return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);","return (a <= b) ? a : (Float.isNaN(a + b) ? Float.NaN : b);"
"1014","7711.txt","result.set(String.valueOf(endpointMetrics.getAverageProcessingTime()));","result.set(String.valueOf(endpointMetrics.getTotalProcessingTime()));","result.set(String.valueOf(endpointMetrics.getMinProcessingTime()));"
"1015","7713.txt","@OperateOnDeployment(""local-and-remote-receviers-config"")","@Ignore // EJBCLIENT-18","@Deployment(name = ""local-and-remote-receviers-config"", testable = false, managed = false)"
"1016","772.txt","null);","new Object[0]);","return ((RealMatrixImpl) new RealMatrixImpl(jTj, false).inverse()).getDataRef();"
"1017","7723.txt","List<Object> find(String queryString) throws DataAccessException;","List<?> find(String queryString) throws DataAccessException;","List<Object> find(String queryString, Object value) throws DataAccessException;"
"1018","7732.txt","throw ProtocolMessages.MESSAGES.nullVar(""connectTask"");","ProtocolMessages.MESSAGES.nullVar(""connectTask"");","throw ProtocolMessages.MESSAGES.channelClosed();"
"1019","7735.txt","throw unexpectedAttribute(reader, i);","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, 0);"
"1020","7736.txt","throw unexpectedAttribute(reader, i);","unexpectedAttribute(reader, i);","throw unexpectedAttribute(reader, 0);"
"1021","7754.txt","throws IOException {","throws IllegalStateException, IOException, InterruptedException {","throws Exception {"
"1022","7763.txt","Object test = SerializationUtils.clone(iMap);","HashMap<?, ?> test = SerializationUtils.clone(iMap);","Object test = SerializationUtils.clone(null);"
"1023","7770.txt","v.walkInOptimizedOrder(visitor, expectedStart, expectedEnd);","v.walkInDefaultOrder(visitor, expectedStart, expectedEnd);","v.walkInOptimizedOrder(visitor);"
"1024","7793.txt","void addObservations(double[][] x, double[] y) throws ModelSpecificationException;","void addObservations(double[][] x, double[] y);","void addObservation(double[] x, double y) throws ModelSpecificationException;"
"1025","7801.txt","Session session = sessionFactory.openSession();","Session session = SessionFactoryUtils.openSession(sessionFactory);","Session session = openSession(sessionFactory);"
"1026","7807.txt","return new StringArrayToMap(sourceType, targetType, this);","return null;","return new ArrayToCollection(sourceType, targetType, this);"
"1027","783.txt","return printer.format(millis);","return format(new Date(millis));","return printer.format(millis, buf);"
"1028","7834.txt","EJB3SubsystemRootResourceDefinition.DEFAULT_CLUSTERED_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);","// Ignored","EJB3SubsystemRootResourceDefinition.DEFAULT_SFSB_CACHE.parseAndSetParameter(value, ejb3SubsystemAddOperation, reader);"
"1029","7869.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());"
"1030","7882.txt","return isDigits( StringUtils.replaceOnce( str.substring(1), ""."", StringUtils.EMPTY ) );","return isDigits( StringUtils.replaceOnce( StringUtils.substring( str, 1 ), ""."", StringUtils.EMPTY ) );","return isDigits( StringUtils.replaceOnce( str, ""."", StringUtils.EMPTY ) );"
"1031","7912.txt","Set<String> getDefaultProfiles();","String getDefaultProfile();","Set<String> getActiveProfiles();"
"1032","7914.txt","CSVRecord result = null;","CSVRecord result = new CSVRecord(null, headerMap, null, recordNumber + 1);","CSVRecord rec;"
"1033","797.txt","public static final String BACKGROUNDVALIDATIONMILLIS = ""background-validation-millis"";","public static final String BACKGROUNDVALIDATIONMINUTES = ""background-validation-minutes"";","public static final String BACKGROUNDVALIDATION = ""background-validation"";"
"1034","7973.txt",".setElementValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))",".setValidator(new StringLengthValidator(1))"
"1035","7977.txt",".setElementValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))",".setValidator(new StringLengthValidator(1, true, true))"
"1036","798.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(currentValue);"
"1037","7985.txt","public static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","static final ServiceName JBOSS_SERVER_EXECUTOR = JBOSS_AS.append(""server-executor"");","public static final ServiceName JBOSS_SERVER_CONTROLLER = JBOSS_AS.append(""server-controller"");"
"1038","799.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(currentValue);"
"1039","8003.txt","public void unregisterSubModel(PathElement address) {","public void registerSubModel(PathElement address, ManagementResourceRegistration subModel) {","public void unregisterProxyController(PathElement address) {"
"1040","8004.txt","public void unregisterSubModel(PathElement address) {","public void registerSubModel(PathElement address, ManagementResourceRegistration subModel) {","public void unregisterProxyController(PathElement address) {"
"1041","8005.txt","if (cli != null) cli.quit();","cli.quit();","if (cli == null) cli = new CLIWrapper(true);"
"1042","8012.txt",".setXmlName(""fail-on-warn"")",".setXmlName(""fail-on-error"")",".setXmlName(""fail-on-error"")"
"1043","802.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(currentValue);"
"1044","8022.txt","new MagicNumberFileFilter(""0"", -1);","new MagicNumberFileFilter((String)"""", -1);","new MagicNumberFileFilter("""", 0);"
"1045","803.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","populateModel(context, operation, resource);"
"1046","8032.txt",".setValidator(new IntRangeValidator(0, true, true))",".setValidator(new IntRangeValidator(1, true, true))",".setValidator(new IntRangeValidator(1, true, true))"
"1047","804.txt","context.stepCompleted();","context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);","context.getResult().set(value);"
"1048","8042.txt","numToWrite = 0;","numToWrite -= numToWrite;","numToWrite -= num;"
"1049","8049.txt","if(nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null || nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null) {"
"1050","8052.txt","error = SlaveRegistrationError.formatHostAlreadyExists(e.getMessage());","error = e.getMessage();","output.writeUTF(SlaveRegistrationError.parse(error).toString());"
"1051","8077.txt","context.removeService(ChannelService.getFactoryServiceName(ChannelService.DEFAULT));","context.removeService(ChannelService.getStackServiceName(ChannelService.DEFAULT));","context.removeService(ChannelFactoryService.getServiceName(ChannelFactoryService.DEFAULT));"
"1052","8079.txt","return services.remove(cl);","return services.remove(WildFlySecurityManager.getCurrentContextClassLoaderPrivileged());","return services.get(cl).getValue();"
"1053","8084.txt","static final String DEFAULT_CACHE_CONTAINER = ""default-cache-container"";","static final String DEFAULT_CONTAINER = ""default-container"";","static final String DEFAULT_CACHE = ""default-cache"";"
"1054","8127.txt","throw new IllegalStateException(""Invalid modules directory: "" + bundlesDir);","throw new IllegalStateException(""Invalid modules directory: "" + modulesDir);","throw new IllegalStateException(""Invalid modules directory: "" + modulesDir);"
"1055","8136.txt","writer.writeAttribute(attribute.getLocalName(), value);","writeAttribute(writer, attribute, value);","writer.writeAttribute(Attribute.MODULE.getLocalName(), extension);"
"1056","8139.txt","throw MESSAGES.couldNotCreateURI(uri,e.toString());","throw MESSAGES.couldNotCreateURI(new ModelNode().set(""Cannot create a valid URI from "" + uri + "" -- "" + e.toString()));","throw MESSAGES.connectionUriEmpty(connectionName);"
"1057","8141.txt","Assert.assertEquals(""hello"", ejb.getRemoteViaWrappedHandle());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());","Assert.assertEquals(""hello"", ejb.getRemoteViaHandleMessage());"
"1058","8142.txt","return accessConstraintDefinitions;","return resourceRegistration.getAccessConstraints();//accessConstraintDefinitions;","return resourceRegistration;"
"1059","8171.txt","public String otherMethod();","public String testGetEjbLocalHome();","public String sayHello();"
"1060","8190.txt","RuntimeException noActiveTransaction(int id);","RequestProcessingException noActiveTransaction(int id);","RuntimeException transactionTimeout(String type);"
"1061","8236.txt","if (!(other instanceof RealVector)) {","if (other == null || !(other instanceof RealVector)) {","if (v instanceof ArrayRealVector) {"
"1062","824.txt","public static final int INSTALL_BEAN_CONTAINER                      = 0xB00;","public static final int INSTALL_MANAGED_BEAN_DEPLOYMENT             = 0xB00;","public static final int INSTALL_MODULE_CONTEXT                      = 0x200;"
"1063","825.txt","throw new XmlStreamReaderException(msg, bomEnc, xmlGuessEnc, xmlEnc);","throw new IOException(msg);","throw new XmlStreamReaderException(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);"
"1064","8262.txt","LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,","""endpoints do not specify an interval: [{0}, {1}]"",","LocalizedFormats.INVALID_ITERATIONS_LIMITS,"
"1065","8263.txt","LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL,","""endpoints do not specify an interval: [{0}, {1}]"",","LocalizedFormats.SAME_SIGN_AT_ENDPOINTS,"
"1066","8264.txt","LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER, source);","""unparseable complex number: \""{0}\"""", source);","LocalizedFormats.NULL_REAL_FORMAT);"
"1067","8265.txt","LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);","""unparseable fraction number: \""{0}\"""", source);","LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);"
"1068","8266.txt","LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);","""unparseable fraction number: \""{0}\"""", source);","LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);"
"1069","8268.txt","LocalizedFormats.WRONG_BLOCK_LENGTH,","""wrong array shape (block length = {0}, expected {1})"",","LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
"1070","8274.txt","resourceRegistration.registerOperationHandler(XmlMarshallingHandler.DEFINITION, xmh);","resourceRegistration.registerOperationHandler(XmlMarshallingHandler.OPERATION_NAME, xmh, xmh, false, OperationEntry.EntryType.PUBLIC, readOnly);","resourceRegistration.registerOperationHandler(SnapshotTakeHandler.DEFINITION, snapshotTake);"
"1071","8297.txt","doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-5);","doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);","doTest(func, minPoint, init,  GoalType.MINIMIZE, 1e-9, 1e-7);"
"1072","8310.txt","assertEquals(strategy.getDelimiter(), ',');","assertEquals(strategy.getDelimiter(), ';');","assertEquals(strategy.getDelimiter(), '\t');"
"1073","8322.txt","public void init(double t0, double[] y0, double t) {","public void reset() {","public void computeDerivatives(double t, double[] y, double[] dot) {"
"1074","8325.txt","public void init(double t0, double[] y0, double t) {","public void reset() {","public void computeDerivatives(double t, double[] y, double[] dot) {"
"1075","8328.txt","public void init(double t0, double[] y0, double t) {","public void reset() {","public void computeDerivatives(double t, double[] y, double[] dot) {"
"1076","8336.txt","bindInfo.setupLookupInjection(serviceBuilder, injector);","serviceBuilder.addDependency(bindInfo.getBinderServiceName(), ManagedReferenceFactory.class, injector);","LookupInjectionSource lookup = (LookupInjectionSource) configuration;"
"1077","8342.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"1078","8417.txt","String server = oneUp.getLastElement().getValue();","String server = twoUp.getLastElement().getValue();","String server = twoUp.getLastElement().getValue();"
"1079","8429.txt","IllegalStateException illegalStateFailedToRegisterModule(@Cause Throwable th, Module module);","DeploymentUnitProcessingException deploymentFailedToRegisterModule(@Cause Throwable th, Module module);","IllegalStateException illegalStateCannotFindBundleDir(File dir);"
"1080","8439.txt","batchBuilder.addService(JAR_DEPLOYMENT_CHAIN_SERVICE_NAME.append(deploymentUnitProcessor.getClass().getName()), deploymentUnitProcessorService)","batchBuilder.addService(DeploymentUnitProcessor.DEPLOYMENT_PROCESSOR_SERVICE_NAME.append(deploymentUnitProcessor.getClass().getName()), deploymentUnitProcessorService)","batchBuilder.addService(JAR_DEPLOYMENT_CHAIN_SERVICE_NAME, deploymentChainService)"
"1081","8471.txt","assertNull(""Query param should have been deleted"", result.getQuery());","assertEquals(""baz"", result.getQuery());","assertEquals(""bar"", result.getQuery());"
"1082","8472.txt","return INF;","return NaN;","return NaN;"
"1083","8537.txt","@Message(id = 67, value = ""Servlet class not defined for servlet %s"")","@Message(id = 67, value = ""Could not find the port number listening for protocol %s"")","@Message(id = 36, value = ""@ServletSecurity is only allowed at class level %s"")"
"1084","8539.txt","//        suite.addTest(TextTestSuite.suite());","suite.addTest(TextTestSuite.suite());","suite.addTest(org.apache.commons.lang.enum.EnumTestSuite.suite());"
"1085","8547.txt","return (Date)date.clone();","return date;","return resultAction;"
"1086","8563.txt","protected Entry() {","private Entry() {","protected Enum(String name) {"
"1087","8571.txt","numToWrite = 0;","numToWrite -= numToWrite;","numToWrite -= num;"
"1088","858.txt","throw new IOException(""HTTP Status "" + responseCode + "" Response: "" + read(err));","throw new IOException(read(err));","throw new IOException(e);"
"1089","8583.txt","public synchronized <T> List<T> getAttachmentList(AttachmentKey<? extends List<T>> key) {","public <T> List<T> getAttachmentList(AttachmentKey<? extends List<T>> key) {","public synchronized <T> T getAttachment(final AttachmentKey<T> key) {"
"1090","8585.txt","assertEquals(""anonymous"", response[1]);","assertEquals(""user1"", response[1]);","assertEquals(""user1"", response[0]);"
"1091","8592.txt","CommonAttributes.INDEXING_PROPERTIES.marshallAsElement(cache,writer);","CommonAttributes.INDEXING_PROPERTIES.marshalToElement(cache.get(ModelKeys.INDEXING_PROPERTIES),writer);","CommonAttributes.INDEXING.marshallAsAttribute(cache, writer);"
"1092","8597.txt","@Test(expected = IllegalArgumentException.class)","@Test()","@Test(expected = NoSuchElementException.class)"
"1093","8609.txt","if (source.length() == 0) {","if ("""".equals(source)) {","if (source.length() > 1) {"
"1094","8627.txt","if (nextSecurityDomain == null || nextSecurityDomain.isEmpty()) {","if(nextSecurityDomain.isEmpty()) {","if (nextSecurityDomain == null) {"
"1095","8629.txt","fail(""retainAll should raise UnsupportedOperationException"");","fail(""removeAll should raise UnsupportedOperationException"");","fail(""clear should raise UnsupportedOperationException"");"
"1096","8632.txt","final Map<String, TimerEntity> map = getTimers(timer.getTimedObjectId());","Map<String, TimerEntity> map = getTimers(timer.getTimedObjectId());","final Map<String, TimerEntity> timers = getTimers(timedObjectId);"
"1097","8644.txt",".setDefaultValue(new ModelNode(""""))",".setDefaultValue(new ModelNode(""default""))",".setDefaultValue(new ModelNode(-1))"
"1098","8646.txt","//connection.stop();","connection.close();","connection.start();"
"1099","8647.txt","//connection.stop();","connection.close();","connection.start();"
"1100","866.txt","result.add(createOperation(TransportResource.TRANSPORT_ATTRIBUTES, transportAddress, transport));","result.add(TransportAdd.createOperation(transportAddress, transport));","result.add(createOperation(TransactionResource.TRANSACTION_ATTRIBUTES, transactionAddress, transaction));"
"1101","8666.txt","return null;","throw new RuntimeException(""Could not find root annotation index!"");","return result;"
"1102","8670.txt","throw new IllegalArgumentException(String.format(message, Double.valueOf(value)));","throw new IllegalArgumentException(String.format(message, new Double(value)));","throw new IllegalArgumentException(String.format(message, Long.valueOf(value)));"
"1103","8671.txt","return Double.valueOf(this.value);","return new Double(this.value);","return Double.valueOf(doubleValue());"
"1104","8672.txt","return Float.valueOf(this.value);","return new Float(this.value);","return Float.valueOf(floatValue());"
"1105","8681.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"1106","8684.txt","if (PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6 && PlatformMBeanConstants.OBJECT_NAME.getName().equals(name)) {","if (PlatformMBeanConstants.VERBOSE.equals(name)) {"
"1107","870.txt",".setAllowExpression(true)",".setAllowExpression(false)",".setAllowExpression(true)"
"1108","874.txt","public static ComplexFormat getInstance() {","public static CompositeFormat getInstance() {","public static ComplexFormat getInstance(Locale locale) {"
"1109","8756.txt","Assert.assertEquals(MethodInterceptor.MESSAGE + ""Hello"", message);","Assert.assertEquals(""Hello"", MethodInterceptor.MESSAGE + message);","Assert.assertEquals(DefaultInterceptor.MESSAGE + ""Hello"", message);"
"1110","877.txt","URL servletURL = new URL(""http://"" + managementClient.getMgmtAddress() + "":8080/"" + context);","URL servletURL = new URL(""http://localhost:8080/"" + context);","String uri = DeploymentManagerImpl.DEPLOYER_URI + ""?targetType=as7&serverHost="" + managementClient.getMgmtAddress() + ""&serverPort="" + managementClient.getMgmtPort();"
"1111","8775.txt","if (key instanceof String) {","if (this.accept(key)) {","if (value instanceof HttpSessionBindingListener) {"
"1112","8777.txt","@Deprecated static final String BATCHING = ""batching"";","static final String BATCHING = ""batching"";","@Deprecated static final String VIRTUAL_NODES = ""virtual-nodes"";"
"1113","8779.txt","String LIVE_CONNECTOR_REF =""live-connector-ref"";","String BACKUP_CONNECTOR_REF =""backup-connector-ref"";","String CONNECTOR_REF =""connector-ref"";"
"1114","885.txt","static int toJavaVersionInt(String version) {","static float toJavaVersionInt(String version) {","static int[] toJavaVersionIntArray(String version) {"
"1115","8884.txt","writeAttribute(writer, Attribute.NAME, node.get(NAME));","writeAttribute(writer, Attribute.BLOCKING, node.get(NAME));","writeAttribute(writer, Attribute.NAME, node.get(name));"
"1116","8892.txt","final Map<String, String> map = shortRec.toMap();","Map<String, String> map = shortRec.toMap();","final Map<String, String> map = this.recordWithHeader.toMap();"
"1117","8893.txt","return value == null ? true : value.asBoolean();","return value == null ? false : value.asBoolean();","return value == null ? null : value.asString();"
"1118","8899.txt","workParameters.add(this.metaDataProvider.createDefaultOutParameter(returnNameToUse, meta));","workParameters.add(new SqlOutParameter(returnNameToUse, meta.getSqlType()));","workParameters.add(this.metaDataProvider.createDefaultOutParameter(parNameToUse, meta));"
"1119","8903.txt","bindParameterName(i, varNames.get(0));","bindParameterName(i, (String) varNames.get(0));","bindParameterName(j, varNames.get(0));"
"1120","8905.txt","Lockable lockable = proxy;","Lockable lockable = (Lockable) proxy;","Lockable lockable = (Lockable)proxy;"
"1121","8907.txt","beanFactory.registerCustomEditor(requiredType, editorClass);","beanFactory.registerCustomEditor(requiredType, (Class<? extends PropertyEditor>) editorClass);","beanFactory.registerCustomEditor(requiredType, (Class) value);"
"1122","8908.txt","ObjectFactory<?> objectFactory = factory.getObject();","ObjectFactory<?> objectFactory = (ObjectFactory<?>) factory.getObject();","ObjectFactory<?> objectFactory = testBean.getObjectFactory();"
"1123","8915.txt","return doGet(attributeName, Class.class);","return (Class<T>)doGet(attributeName, Class.class);","return doGet(attributeName, Class[].class);"
"1124","8947.txt","Assert.assertTrue(Boolean.valueOf(response.getFirstHeader(""serialized"").getValue()));","Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(""serialized"").getValue()));","Assert.assertFalse(Boolean.valueOf(response.getFirstHeader(""serialized"").getValue()));"
"1125","8962.txt","assertEquals(array, result);","assertArrayEquals(array, result);","assertEquals("""", result);"
"1126","8966.txt","deployers.get(Phase.POST_MODULE).add(new RegisteredProcessor(Phase.POST_MODULE_REFLECTION_INDEX, new InstallReflectionIndexProcessor()));","deployers.get(Phase.INSTALL).add(new RegisteredProcessor(Phase.INSTALL_REFLECTION_INDEX, new InstallReflectionIndexProcessor()));","deployers.get(Phase.POST_MODULE).add(new RegisteredProcessor(Phase.POST_MODULE_INSTALL_EXTENSION, new ModuleExtensionNameProcessor()));"
"1127","8967.txt","String reqPath = ""http://"" + System.getProperty(""test.bind.address"", ""localhost"") + "":8080/resteasy-osgi-client/rest/echo/"" + message;","String reqPath = ""http://localhost:8080/resteasy-osgi-client/rest/echo/"" + message;","builder.addManifestHeader(""Dependencies"", ""org.osgi.core,deployment.jaxrs-osgi-target:0.0.0"");"
"1128","8971.txt","ctx.enterState(EscapeCharacterState.KEEP_ESCAPE);","doHandle(ctx);","ctx.enterState(EscapeCharacterState.INSTANCE);"
"1129","899.txt","paramDefaultValue = parseDefaultValueAttribute(requestParam.defaultValue());","paramDefaultValue = requestParam.defaultValue();","defaultValue = parseDefaultValueAttribute(requestParam.defaultValue());"
"1130","9008.txt","@Resource","@Resource(lookup = ""java:comp/DefaultJMSConnectionFactory"")","@Resource(mappedName = ""/queue/myAwesomeQueue"")"
"1131","9009.txt","@Resource","@Resource(name=""myCF"", lookup=""java:comp/DefaultJMSConnectionFactory"")","@RequestScoped"
"1132","9029.txt","builder.setInitialMode(Mode.PASSIVE);","builder.setInitialMode(Mode.ON_DEMAND);","builder.setInitialMode(Mode.ON_DEMAND);"
"1133","903.txt","assertTrue(""Prototype creation took too long: "" + sw.getTotalTimeMillis(), sw.getTotalTimeMillis() < 4500);","assertTrue(""Prototype creation took too long: "" + sw.getTotalTimeMillis(), sw.getTotalTimeMillis() < 4000);","assertTrue(""Prototype creation took too long: "" + sw.getTotalTimeMillis(), sw.getTotalTimeMillis() < 4000);"
"1134","904.txt","System.err.println(MESSAGES.invalidValue(key, ""InetAddress"", value));","System.out.println(MESSAGES.invalidValue(key, ""InetAddress"", value));","System.err.println(MESSAGES.invalidValue(key, ""Integer"", value));"
"1135","9040.txt","public Group getValue() {","public Group getValue() throws IllegalStateException, IllegalArgumentException {","public String getName() {"
"1136","9041.txt","throw new RuntimeException(e);","return null;","throw new RuntimeException( message );"
"1137","9073.txt","return getDefaultAccessTimeout();","return new AccessTimeoutDetails(5, TimeUnit.MINUTES);","return accessTimeout;"
"1138","9076.txt","return holder & _mask;","return (holder & _mask);","return holder & ~_mask;"
"1139","9083.txt","return Math.random() > 0.5;","return (Math.random() > 0.5);","return Math.random();"
"1140","9092.txt","this.previousRun = null;","this.previousRun = builder.previousRun;","this.previousRun = previousRun;"
"1141","912.txt","return false;","return key == null;","return true;"
"1142","913.txt","return 1;","return o1 == null ? 0 : 1;","return 0;"
"1143","9189.txt","tmp = new File(this.homeDir, ""standalone"");","tmp = new File(this.homeDir, ""server"");","tmp = new File(this.homeDir, ""modules"");"
"1144","9208.txt","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL1, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));","response = client.execute(new HttpGet(SessionOperationServlet.createGetURI(baseURL2, ""a"")));"
"1145","9219.txt","//             fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed","fail(""Expecting IllegalArgumentException"");","fail(""Expecting IllegalArgumentException"");"
"1146","9222.txt","return Long.valueOf(this.value);","return new Long(this.value);","return Long.valueOf(longValue());"
"1147","931.txt","assertEquals("",\""origins\"":[\""*:*\""],\""cookie_needed\"":false,\""websocket\"":true}"",","assertEquals("",\""origins\"":[\""*:*\""],\""cookie_needed\"":true,\""websocket\"":true}"",","assertEquals("",\""origins\"":[\""*:*\""],\""cookie_needed\"":false,\""websocket\"":false}"","
"1148","9353.txt","public static final int ARQUILLIAN_RUNWITH_ANNOTATION_PROCESSOR     = PARSE + 0xF00;","public static final int ARQUILLIAN_MANIFEST_PROCESSOR               = PARSE + 0xF00;","public static final int ARQUILLIAN_JUNIT_ANNOTATION_PROCESSOR       = POST_MODULE + 0x300;"
"1149","9357.txt","throw PlatformMBeanMessages.MESSAGES.badReadAttributeImpl8(name);","throw new IllegalStateException(String.format(""Read support for attribute %s was not properly implemented"", name));","} else if (PlatformMBeanConstants.SYSTEM_LOAD_AVERAGE.equals(name)) {"
"1150","9358.txt","throw PlatformMBeanMessages.MESSAGES.badReadAttributeImpl10(name);","throw new IllegalStateException(String.format(""Read support for attribute %s was not properly implemented"", name));","} else if (PlatformMBeanConstants.START_TIME.equals(name)) {"
"1151","9365.txt","/** {@inheritDoc} */","@Override","@Test"
"1152","9376.txt","IllegalStateException illegalStateArtifactBaseLocation(File dir);","StartException illegalStateArtifactBaseLocation(File dir);","IllegalStateException illegalStateCannotFindBundleDir(File dir);"
"1153","9402.txt","argError = ""Only one of '--file', '--commands' or '--command' can appear as the argument at a time: "" + arg;","argError = ""Only one of '--file', '--commands' or '--command' can appear as the argument at a time."";","argError = ""Only one of '--file', '--commands' or '--command' can appear as the argument at a time."";"
"1154","9417.txt","public CSVRecord nextRecord() throws IOException {","CSVRecord nextRecord() throws IOException {","public List<CSVRecord> getRecords() throws IOException {"
"1155","9426.txt","return scheme != null && scheme.equals(""https"");","return false;","this.scheme = scheme;"
"1156","9427.txt","node.get(DESCRIPTION).set(bundle.getString(""vault.add""));","node.get(DESCRIPTION).set(bundle.getString(""jvm.add""));","node.get(DESCRIPTION).set(bundle.getString(""vault""));"
"1157","9432.txt","Map<String, Object> getModel();","Map getModel();","Object getTarget();"
"1158","944.txt","public void setUp() {","public void setUp() throws Exception {","public void testParse() {"
"1159","945.txt","public void testConstructor() {","public void testConstructor() throws Exception {","public void testConstructorDouble() {"
"1160","9453.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"1161","9454.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"1162","9455.txt","FileStoreResourceDefinition.RELATIVE_PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.PATH.parseAndSetParameter(value, store, reader);","FileStoreResourceDefinition.RELATIVE_TO.parseAndSetParameter(value, store, reader);"
"1163","946.txt","public void setUp() {","public void setUp() throws Exception {","public void testParse() {"
"1164","947.txt","public void testSetSubMatrix() {","public void testSetSubMatrix() throws Exception {","public void testGetSubMatrix() {"
"1165","9479.txt","return org.jboss.as.controller.services.path.RelativePathService.addService(name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers, listeners);","return RelativePathService.addService(name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers);","return org.jboss.as.controller.services.path.RelativePathService.addService(name, relativePath, relativeTo, serviceTarget, newControllers, listeners);"
"1166","948.txt","public void testSetSubMatrix() {","public void testSetSubMatrix() throws Exception {","public void testGetSubMatrix() {"
"1167","9482.txt","public void handleResultComplete() {","public void handleResultComplete(final ModelNode compensatingOperation) {","public void handleCancellation() {"
"1168","9483.txt","public void handleResultComplete() {","public void handleResultComplete(final ModelNode compensatingOperation) {","public void handleCancellation() {"
"1169","9484.txt","public void handleResultComplete() {","public void handleResultComplete(final ModelNode compensatingOperation) {","public void handleCancellation() {"
"1170","9488.txt","public void testBindLocalDateWithSpecificFormatter() throws Exception {","public void testBindLocalDateWithSpecifcFormatter() throws Exception {","public void testBindLocalTimeWithSpecificFormatter() throws Exception {"
"1171","949.txt","public void testSetSubMatrix() {","public void testSetSubMatrix() throws Exception {","public void testGetSubMatrix() {"
"1172","950.txt","public void testSetSubMatrix() {","public void testSetSubMatrix() throws Exception {","public void testGetSubMatrix() {"
"1173","952.txt","public void testSetSubMatrix() {","public void testSetSubMatrix() throws Exception {","public void testSubMatrix() {"
"1174","955.txt","public void testLongly() {","public void testLongly() throws Exception {","public void testPCorr() {"
"1175","9555.txt","System.out.println(""Performance check for SpEL expression: 'hello' + getWorld() + ' spring'"");","System.out.println(""Performance check for SpEL expression: '{'abcde','ijklm'}[0].substring({1,3,4}[0],{1,3,4}[1])'"");","System.out.println(""Performance check for SpEL expression: '{'abcde','ijklm'}[0].substring({1,3,4}[0],{1,3,4}[1])'"");"
"1176","9561.txt","bd.addConfigurations(m);","scd.addConfigurations(m);","scd.addConfigurations(m);"
"1177","9598.txt","if(tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID)) {","if(tuple.isTick()) {","if(ct.equals(CoordType.single())) {"
"1178","963.txt","public static final String SERVER_SYSTEM_DEPLOY_DIR = ""jboss.server.system.deploy.dir"";","private static final String SERVER_SYSTEM_DEPLOY_DIR = ""jboss.server.system.deploy.dir"";","public static final String SERVER_DEPLOY_DIR = ""jboss.server.deploy.dir"";"
"1179","964.txt","OperationFailedException invalidDiscoveryOptionsOrdering(String name);","String invalidDiscoveryOptionsOrdering(String name);","OperationFailedException noSocketBindingGroupCalled(String groupName);"
"1180","9666.txt","writeLoginModule(writer, modelNode, Constants.TRUST_MODULE, Element.TRUST_MODULE.getLocalName());","writeLoginModule(writer, modelNode, Constants.TRUST_MODULE);","writeLoginModule(writer, modelNode, Constants.AUTH_MODULE, Element.AUTH_MODULE.getLocalName());"
"1181","9674.txt","jar.addAsManifestResource(EJBSecurityTestCase.class.getPackage(), ""ejb-jar.xml"", ""ejb-jar.xml"");","jar.addAsManifestResource(""ejb/security/ejb-jar.xml"", ""ejb-jar.xml"");","jar.addAsManifestResource(EJBSecurityTestCase.class.getPackage(), ""jboss-ejb3.xml"", ""jboss-ejb3.xml"");"
"1182","9686.txt","throw MathRuntimeException.createIllegalArgumentException(""function is null"");","throw new IllegalArgumentException(""Function can not be null."");","throw MathRuntimeException.createIllegalStateException(""no result available"");"
"1183","9794.txt","//@Test","@Test","@Test"
"1184","9811.txt","parseSystemProperties(reader, address, list);","list.add(Util.getWriteAttributeOperation(address, ""system-properties"", parseProperties(reader)));","parseServerProfile(reader, address, list);"
"1185","9837.txt","if (lineLength > 0 && pos > 0) {","if (lineLength > 0) {","if (lineLength > 0) {"
"1186","9838.txt","public boolean _isCallerInRole(final String... roleNames) {","private boolean _isCallerInRole(final String... roleNames) {","public boolean isCallerInRole(final String roleName) {"
"1187","9858.txt","final Channel mgmtChannel = channel;","final ManagementChannel mgmtChannel = new ManagementChannel(serverName, channel);","final Channel.Receiver receiver = ManagementChannelReceiver.createDelegating(handler);"
"1188","9863.txt","} catch (NoSuchMethodException e) { // NOPMD - Swallow","} catch (NoSuchMethodException e) { /* SWALLOW */","} catch (NoSuchMethodException e) {"
"1189","9868.txt","public void testSymmetryOfLong() {","public void testSymmetryOfLong() throws IOException {","public void testSymmetry() {"
"1190","9876.txt","context.addStep(assemblyHandler, queryRuntime ? OperationContext.Stage.VERIFY : OperationContext.Stage.IMMEDIATE);","context.addStep(assemblyHandler, OperationContext.Stage.IMMEDIATE);","context.addStep(attrResponse, attributeOperation, handler, OperationContext.Stage.IMMEDIATE);"
"1191","990.txt","public CRC32VerifyingInputStream(final InputStream in, final long size, final int expectedCrc32) {","public CRC32VerifyingInputStream(final InputStream in, final int size, final long expectedCrc32) {","public CRC32VerifyingInputStream(final InputStream in, final long size, final long expectedCrc32) {"
"1192","9953.txt","import static test.util.TestResourceUtils.*;","import static org.springframework.tests.TestResourceUtils.qualifiedResource;","import static org.junit.Assert.*;"
"1193","996.txt","model.setEmptyObject();","//","final String match = address.getLastElement().getValue();"
"1194","9989.txt","new TDistributionImpl(0);","TDistribution dist = new TDistributionImpl(0);","return new TDistributionImpl(5.0);"
"1195","9992.txt","return new String(data);","return new String(data); // TODO is it correct to use the default charset here?","return new String(data,this.charset);"
